{"version":3,"sources":["env.ts","SwaggerService.ts","SwaggerWrapper.jsx","App.tsx","index.tsx"],"names":["Env","getApiProtocol","protocol","window","location","protocolOverride","process","REACT_APP_NEON_API_HOST_PROTOCOL","length","String","getApiHostName","hostName","host","hostOverride","REACT_APP_NEON_API_HOST","getApiHost","getApiRootPath","TRUNCATE_ENDPOINTS","exists","o","SwaggerService","requestInterceptor","req","url","URL","port","href","responseInterceptor","res","Object","keys","some","value","pathname","startsWith","body","data","shouldSliceData","Array","isArray","slice","obj","text","findPathKey","find","appliedPathKey","appliedPath","includes","map","p","np","changeLogs","siteCodes","bodyData","trimChangeLogs","trimSiteCodes","s","ns","dataProducts","trimProducts","JSON","stringify","getSwaggerUI","spec","docExpansion","App","useLayoutEffect","frameElement","ResizeObserver","style","height","setAttribute","document","overflow","resizeObserver","entries","cr","contentRect","observe","disconnect","className","swaggerJSON","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a6d731e.chunk.js","sourcesContent":["export interface ApiHostEnv {\n  getApiProtocol: () => string;\n  getApiHostName: () => string;\n  getApiHost: () => string;\n  getApiRootPath: () => string;\n}\n\nconst Env: ApiHostEnv = {\n  getApiProtocol: (): string => {\n    let protocol = `${window.location.protocol}`;\n    const protocolOverride: string | undefined = process.env.REACT_APP_NEON_API_HOST_PROTOCOL;\n    if (typeof protocolOverride === 'string' && (protocolOverride.length > 0)) {\n      protocol = String(protocolOverride);\n    }\n    return protocol;\n  },\n  getApiHostName: (): string => {\n    let hostName = `${window.location.host}`;\n    const hostOverride: string | undefined = process.env.REACT_APP_NEON_API_HOST;\n    if (typeof hostOverride === 'string' && (hostOverride.length > 0)) {\n      hostName = String(hostOverride);\n    }\n    return hostName;\n  },\n  getApiHost: (): string => (\n    `${Env.getApiProtocol()}//${Env.getApiHostName()}`\n  ),\n  getApiRootPath: (): string => (\n    (typeof process.env.REACT_APP_NEON_API_ROOT === 'string')\n      ? process.env.REACT_APP_NEON_API_ROOT\n      : ''\n  ),\n};\n\nexport default Env;\n","import Env from './env';\n\nconst TRUNCATE_ENDPOINTS = {\n  [`${Env.getApiRootPath()}/products`]: 'products',\n  [`${Env.getApiRootPath()}/sites`]: 'sites',\n  [`${Env.getApiRootPath()}/releases`]: 'releases',\n  [`${Env.getApiRootPath()}/locations/sites`]: 'locationSites',\n  [`${Env.getApiRootPath()}/taxonomy`]: 'taxonomy',\n};\n\nconst exists = (o: unknown) => (typeof o !== 'undefined') && (o !== null);\n\nconst SwaggerService = {\n  requestInterceptor: (req: Record<string, unknown>): Record<string, unknown> => {\n    const url = new URL(req.url as string);\n    url.protocol = Env.getApiProtocol();\n    url.host = Env.getApiHostName();\n    url.port = '';\n    return {\n      ...req,\n      url: url.href,\n    };\n  },\n  /**\n   * Applying a custom response interceptor for the Swagger UI component\n   * as it becomes unresponsive when handling a large response body.\n   * This will truncate responses from endpoints that are known to return a\n   * large response body.\n   * @param {Object} res The response object\n   * @return The applied response\n   */\n  responseInterceptor: (res: Record<string, unknown>): Record<string, unknown> => {\n    const url = new URL(res.url as string);\n    const shouldTruncate = Object.keys(TRUNCATE_ENDPOINTS)\n      .some((value: string): boolean => url.pathname.startsWith(value));\n    if (!shouldTruncate) {\n      return res;\n    }\n    if (exists(res.body) && exists((res.body as Record<string, unknown>).data)) {\n      const { data } = (res.body as Record<string, unknown>);\n      const shouldSliceData = Array.isArray(data)\n        && (data.length > 3);\n      const body = {\n        ...res.body as Record<string, unknown>,\n        data: shouldSliceData\n          ? (data as []).slice(0, 3)\n          : data,\n      };\n      delete res.body;\n      delete res.obj;\n      delete res.text;\n      delete res.data;\n      const findPathKey: string | undefined = Object.keys(TRUNCATE_ENDPOINTS)\n        .find((value: string): boolean => url.pathname.startsWith(value));\n      const appliedPathKey: string = exists(findPathKey)\n        ? findPathKey as string\n        : '';\n      let appliedPath: string = TRUNCATE_ENDPOINTS[appliedPathKey];\n      if (appliedPath === 'releases') {\n        if (url.pathname.includes('products')) {\n          appliedPath = 'products';\n        } else if (url.pathname.includes('sites')) {\n          appliedPath = 'sites';\n        }\n      }\n      switch (appliedPath) {\n        case 'products':\n          if (shouldSliceData) {\n            body.data = (body.data as [])\n              .map((p: Record<string, unknown>): Record<string, unknown> => {\n                const np = p;\n                if (Array.isArray(p.changeLogs) && (p.changeLogs.length > 3)) {\n                  np.changeLogs = p.changeLogs.slice(0, 3);\n                }\n                if (Array.isArray(p.siteCodes) && (p.siteCodes.length > 3)) {\n                  np.siteCodes = p.siteCodes.slice(0, 3);\n                }\n                return p;\n              });\n          } else {\n            const bodyData = body.data as Record<string, unknown>;\n            const trimChangeLogs = (Array.isArray(bodyData.changeLogs)\n              && (bodyData.changeLogs.length > 3));\n            const trimSiteCodes = (Array.isArray(bodyData.siteCodes)\n              && (bodyData.siteCodes.length > 3));\n            body.data = {\n              ...bodyData,\n              changeLogs: trimChangeLogs\n                ? (bodyData.changeLogs as []).slice(0, 3)\n                : bodyData.changeLogs,\n              siteCodes: trimSiteCodes\n                ? (bodyData.siteCodes as []).slice(0, 3)\n                : bodyData.siteCodes,\n            };\n          }\n          break;\n        case 'sites':\n          if (shouldSliceData) {\n            body.data = (body.data as [])\n              .map((s: Record<string, unknown>): Record<string, unknown> => {\n                const ns = s;\n                if (Array.isArray(s.dataProducts) && (s.dataProducts.length > 3)) {\n                  ns.dataProducts = s.dataProducts.slice(0, 3);\n                }\n                return ns;\n              });\n          } else {\n            const bodyData = body.data as Record<string, unknown>;\n            const trimProducts = (Array.isArray(bodyData.dataProducts)\n              && (bodyData.dataProducts.length > 3));\n            body.data = {\n              ...bodyData,\n              dataProducts: trimProducts\n                ? (bodyData.dataProducts as []).slice(0, 3)\n                : bodyData.dataProducts,\n            };\n          }\n          break;\n        default:\n          break;\n      }\n      res.body = body;\n      res.obj = body;\n      res.text = JSON.stringify(body);\n      res.data = JSON.stringify(body);\n    }\n    return res;\n  },\n};\n\nexport default SwaggerService;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React from 'react';\nimport SwaggerUI from 'swagger-ui-react';\n\nimport SwaggerService from './SwaggerService';\n\nconst getSwaggerUI = (spec) => (\n  <SwaggerUI\n    spec={spec}\n    docExpansion=\"list\"\n    requestInterceptor={SwaggerService.requestInterceptor}\n    responseInterceptor={SwaggerService.responseInterceptor}\n  />\n);\n\nexport default getSwaggerUI;\n","import React, { useLayoutEffect } from 'react';\nimport getSwaggerUI from './SwaggerWrapper';\n\nimport 'swagger-ui-react/swagger-ui.css';\nimport './App.css';\nimport './swagger-theme-material.min.css';\n\nimport swaggerJSON from './swagger.json';\n\nconst App: React.FC = () => {\n  useLayoutEffect(() => {\n    if (!window.frameElement) {\n      return () => {};\n    }\n    if (typeof ResizeObserver !== 'function') {\n      (window.frameElement as HTMLElement).style.height = '100vh';\n      (window.frameElement as HTMLElement).setAttribute('scrolling', 'yes');\n      window.document.body.style.overflow = 'scroll';\n      return () => {};\n    }\n    const resizeObserver = new ResizeObserver(\n      (entries: ReadonlyArray<ResizeObserverEntry>): void => {\n        for (const entry of entries) {\n          const cr: DOMRectReadOnly = entry.contentRect;\n          (window.frameElement as HTMLElement).style.height = `${cr.height + 60}px`;\n        }\n      },\n    );\n    resizeObserver.observe(window.document.body);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  });\n  return (\n    <div className=\"neon-data-api-docs-swagger\">\n      {getSwaggerUI(swaggerJSON)}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}