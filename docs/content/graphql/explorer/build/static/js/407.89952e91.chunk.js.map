{"version":3,"file":"static/js/407.89952e91.chunk.js","mappings":"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","sources":["../../../node_modules/@graphiql/codemirror-graphql/esm/hint.js","../../../node_modules/node_modules/codemirror/addon/hint/show-hint.js"],"sourcesContent":["import CodeMirror from 'codemirror';\nimport 'codemirror/addon/hint/show-hint';\nimport { getAutocompleteSuggestions, Position } from 'graphql-language-service';\nCodeMirror.registerHelper('hint', 'graphql', (editor, options) => {\n    const { schema, externalFragments, autocompleteOptions } = options;\n    if (!schema) {\n        return;\n    }\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    const position = new Position(cur.line, tokenStart);\n    const rawResults = getAutocompleteSuggestions(schema, editor.getValue(), position, token, externalFragments, autocompleteOptions);\n    const results = {\n        list: rawResults.map(item => {\n            var _a;\n            return ({\n                text: (_a = item === null || item === void 0 ? void 0 : item.rawInsert) !== null && _a !== void 0 ? _a : item.label,\n                type: item.type,\n                description: item.documentation,\n                isDeprecated: item.isDeprecated,\n                deprecationReason: item.deprecationReason,\n            });\n        }),\n        from: { line: cur.line, ch: tokenStart },\n        to: { line: cur.line, ch: token.end },\n    };\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\n//# sourceMappingURL=hint.js.map","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// declare global: DOMRect\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var HINT_ELEMENT_CLASS        = \"CodeMirror-hint\";\n  var ACTIVE_HINT_ELEMENT_CLASS = \"CodeMirror-hint-active\";\n\n  // This is the old interface, kept around for now to stay\n  // backwards-compatible.\n  CodeMirror.showHint = function(cm, getHints, options) {\n    if (!getHints) return cm.showHint(options);\n    if (options && options.async) getHints.async = true;\n    var newOpts = {hint: getHints};\n    if (options) for (var prop in options) newOpts[prop] = options[prop];\n    return cm.showHint(newOpts);\n  };\n\n  CodeMirror.defineExtension(\"showHint\", function(options) {\n    options = parseOptions(this, this.getCursor(\"start\"), options);\n    var selections = this.listSelections()\n    if (selections.length > 1) return;\n    // By default, don't allow completion when something is selected.\n    // A hint function can have a `supportsSelection` property to\n    // indicate that it can handle selections.\n    if (this.somethingSelected()) {\n      if (!options.hint.supportsSelection) return;\n      // Don't try with cross-line selections\n      for (var i = 0; i < selections.length; i++)\n        if (selections[i].head.line != selections[i].anchor.line) return;\n    }\n\n    if (this.state.completionActive) this.state.completionActive.close();\n    var completion = this.state.completionActive = new Completion(this, options);\n    if (!completion.options.hint) return;\n\n    CodeMirror.signal(this, \"startCompletion\", this);\n    completion.update(true);\n  });\n\n  CodeMirror.defineExtension(\"closeHint\", function() {\n    if (this.state.completionActive) this.state.completionActive.close()\n  })\n\n  function Completion(cm, options) {\n    this.cm = cm;\n    this.options = options;\n    this.widget = null;\n    this.debounce = 0;\n    this.tick = 0;\n    this.startPos = this.cm.getCursor(\"start\");\n    this.startLen = this.cm.getLine(this.startPos.line).length - this.cm.getSelection().length;\n\n    if (this.options.updateOnCursorActivity) {\n      var self = this;\n      cm.on(\"cursorActivity\", this.activityFunc = function() { self.cursorActivity(); });\n    }\n  }\n\n  var requestAnimationFrame = window.requestAnimationFrame || function(fn) {\n    return setTimeout(fn, 1000/60);\n  };\n  var cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;\n\n  Completion.prototype = {\n    close: function() {\n      if (!this.active()) return;\n      this.cm.state.completionActive = null;\n      this.tick = null;\n      if (this.options.updateOnCursorActivity) {\n        this.cm.off(\"cursorActivity\", this.activityFunc);\n      }\n\n      if (this.widget && this.data) CodeMirror.signal(this.data, \"close\");\n      if (this.widget) this.widget.close();\n      CodeMirror.signal(this.cm, \"endCompletion\", this.cm);\n    },\n\n    active: function() {\n      return this.cm.state.completionActive == this;\n    },\n\n    pick: function(data, i) {\n      var completion = data.list[i], self = this;\n      this.cm.operation(function() {\n        if (completion.hint)\n          completion.hint(self.cm, data, completion);\n        else\n          self.cm.replaceRange(getText(completion), completion.from || data.from,\n                               completion.to || data.to, \"complete\");\n        CodeMirror.signal(data, \"pick\", completion);\n        self.cm.scrollIntoView();\n      });\n      if (this.options.closeOnPick) {\n        this.close();\n      }\n    },\n\n    cursorActivity: function() {\n      if (this.debounce) {\n        cancelAnimationFrame(this.debounce);\n        this.debounce = 0;\n      }\n\n      var identStart = this.startPos;\n      if(this.data) {\n        identStart = this.data.from;\n      }\n\n      var pos = this.cm.getCursor(), line = this.cm.getLine(pos.line);\n      if (pos.line != this.startPos.line || line.length - pos.ch != this.startLen - this.startPos.ch ||\n          pos.ch < identStart.ch || this.cm.somethingSelected() ||\n          (!pos.ch || this.options.closeCharacters.test(line.charAt(pos.ch - 1)))) {\n        this.close();\n      } else {\n        var self = this;\n        this.debounce = requestAnimationFrame(function() {self.update();});\n        if (this.widget) this.widget.disable();\n      }\n    },\n\n    update: function(first) {\n      if (this.tick == null) return\n      var self = this, myTick = ++this.tick\n      fetchHints(this.options.hint, this.cm, this.options, function(data) {\n        if (self.tick == myTick) self.finishUpdate(data, first)\n      })\n    },\n\n    finishUpdate: function(data, first) {\n      if (this.data) CodeMirror.signal(this.data, \"update\");\n\n      var picked = (this.widget && this.widget.picked) || (first && this.options.completeSingle);\n      if (this.widget) this.widget.close();\n\n      this.data = data;\n\n      if (data && data.list.length) {\n        if (picked && data.list.length == 1) {\n          this.pick(data, 0);\n        } else {\n          this.widget = new Widget(this, data);\n          CodeMirror.signal(data, \"shown\");\n        }\n      }\n    }\n  };\n\n  function parseOptions(cm, pos, options) {\n    var editor = cm.options.hintOptions;\n    var out = {};\n    for (var prop in defaultOptions) out[prop] = defaultOptions[prop];\n    if (editor) for (var prop in editor)\n      if (editor[prop] !== undefined) out[prop] = editor[prop];\n    if (options) for (var prop in options)\n      if (options[prop] !== undefined) out[prop] = options[prop];\n    if (out.hint.resolve) out.hint = out.hint.resolve(cm, pos)\n    return out;\n  }\n\n  function getText(completion) {\n    if (typeof completion == \"string\") return completion;\n    else return completion.text;\n  }\n\n  function buildKeyMap(completion, handle) {\n    var baseMap = {\n      Up: function() {handle.moveFocus(-1);},\n      Down: function() {handle.moveFocus(1);},\n      PageUp: function() {handle.moveFocus(-handle.menuSize() + 1, true);},\n      PageDown: function() {handle.moveFocus(handle.menuSize() - 1, true);},\n      Home: function() {handle.setFocus(0);},\n      End: function() {handle.setFocus(handle.length - 1);},\n      Enter: handle.pick,\n      Tab: handle.pick,\n      Esc: handle.close\n    };\n\n    var mac = /Mac/.test(navigator.platform);\n\n    if (mac) {\n      baseMap[\"Ctrl-P\"] = function() {handle.moveFocus(-1);};\n      baseMap[\"Ctrl-N\"] = function() {handle.moveFocus(1);};\n    }\n\n    var custom = completion.options.customKeys;\n    var ourMap = custom ? {} : baseMap;\n    function addBinding(key, val) {\n      var bound;\n      if (typeof val != \"string\")\n        bound = function(cm) { return val(cm, handle); };\n      // This mechanism is deprecated\n      else if (baseMap.hasOwnProperty(val))\n        bound = baseMap[val];\n      else\n        bound = val;\n      ourMap[key] = bound;\n    }\n    if (custom)\n      for (var key in custom) if (custom.hasOwnProperty(key))\n        addBinding(key, custom[key]);\n    var extra = completion.options.extraKeys;\n    if (extra)\n      for (var key in extra) if (extra.hasOwnProperty(key))\n        addBinding(key, extra[key]);\n    return ourMap;\n  }\n\n  function getHintElement(hintsElement, el) {\n    while (el && el != hintsElement) {\n      if (el.nodeName.toUpperCase() === \"LI\" && el.parentNode == hintsElement) return el;\n      el = el.parentNode;\n    }\n  }\n\n  function Widget(completion, data) {\n    this.id = \"cm-complete-\" + Math.floor(Math.random(1e6))\n    this.completion = completion;\n    this.data = data;\n    this.picked = false;\n    var widget = this, cm = completion.cm;\n    var ownerDocument = cm.getInputField().ownerDocument;\n    var parentWindow = ownerDocument.defaultView || ownerDocument.parentWindow;\n\n    var hints = this.hints = ownerDocument.createElement(\"ul\");\n    hints.setAttribute(\"role\", \"listbox\")\n    hints.setAttribute(\"aria-expanded\", \"true\")\n    hints.id = this.id\n    var theme = completion.cm.options.theme;\n    hints.className = \"CodeMirror-hints \" + theme;\n    this.selectedHint = data.selectedHint || 0;\n\n    var completions = data.list;\n    for (var i = 0; i < completions.length; ++i) {\n      var elt = hints.appendChild(ownerDocument.createElement(\"li\")), cur = completions[i];\n      var className = HINT_ELEMENT_CLASS + (i != this.selectedHint ? \"\" : \" \" + ACTIVE_HINT_ELEMENT_CLASS);\n      if (cur.className != null) className = cur.className + \" \" + className;\n      elt.className = className;\n      if (i == this.selectedHint) elt.setAttribute(\"aria-selected\", \"true\")\n      elt.id = this.id + \"-\" + i\n      elt.setAttribute(\"role\", \"option\")\n      if (cur.render) cur.render(elt, data, cur);\n      else elt.appendChild(ownerDocument.createTextNode(cur.displayText || getText(cur)));\n      elt.hintId = i;\n    }\n\n    var container = completion.options.container || ownerDocument.body;\n    var pos = cm.cursorCoords(completion.options.alignWithWord ? data.from : null);\n    var left = pos.left, top = pos.bottom, below = true;\n    var offsetLeft = 0, offsetTop = 0;\n    if (container !== ownerDocument.body) {\n      // We offset the cursor position because left and top are relative to the offsetParent's top left corner.\n      var isContainerPositioned = ['absolute', 'relative', 'fixed'].indexOf(parentWindow.getComputedStyle(container).position) !== -1;\n      var offsetParent = isContainerPositioned ? container : container.offsetParent;\n      var offsetParentPosition = offsetParent.getBoundingClientRect();\n      var bodyPosition = ownerDocument.body.getBoundingClientRect();\n      offsetLeft = (offsetParentPosition.left - bodyPosition.left - offsetParent.scrollLeft);\n      offsetTop = (offsetParentPosition.top - bodyPosition.top - offsetParent.scrollTop);\n    }\n    hints.style.left = (left - offsetLeft) + \"px\";\n    hints.style.top = (top - offsetTop) + \"px\";\n\n    // If we're at the edge of the screen, then we want the menu to appear on the left of the cursor.\n    var winW = parentWindow.innerWidth || Math.max(ownerDocument.body.offsetWidth, ownerDocument.documentElement.offsetWidth);\n    var winH = parentWindow.innerHeight || Math.max(ownerDocument.body.offsetHeight, ownerDocument.documentElement.offsetHeight);\n    container.appendChild(hints);\n    cm.getInputField().setAttribute(\"aria-autocomplete\", \"list\")\n    cm.getInputField().setAttribute(\"aria-owns\", this.id)\n    cm.getInputField().setAttribute(\"aria-activedescendant\", this.id + \"-\" + this.selectedHint)\n\n    var box = completion.options.moveOnOverlap ? hints.getBoundingClientRect() : new DOMRect();\n    var scrolls = completion.options.paddingForScrollbar ? hints.scrollHeight > hints.clientHeight + 1 : false;\n\n    // Compute in the timeout to avoid reflow on init\n    var startScroll;\n    setTimeout(function() { startScroll = cm.getScrollInfo(); });\n\n    var overlapY = box.bottom - winH;\n    if (overlapY > 0) {\n      var height = box.bottom - box.top, curTop = pos.top - (pos.bottom - box.top);\n      if (curTop - height > 0) { // Fits above cursor\n        hints.style.top = (top = pos.top - height - offsetTop) + \"px\";\n        below = false;\n      } else if (height > winH) {\n        hints.style.height = (winH - 5) + \"px\";\n        hints.style.top = (top = pos.bottom - box.top - offsetTop) + \"px\";\n        var cursor = cm.getCursor();\n        if (data.from.ch != cursor.ch) {\n          pos = cm.cursorCoords(cursor);\n          hints.style.left = (left = pos.left - offsetLeft) + \"px\";\n          box = hints.getBoundingClientRect();\n        }\n      }\n    }\n    var overlapX = box.right - winW;\n    if (scrolls) overlapX += cm.display.nativeBarWidth;\n    if (overlapX > 0) {\n      if (box.right - box.left > winW) {\n        hints.style.width = (winW - 5) + \"px\";\n        overlapX -= (box.right - box.left) - winW;\n      }\n      hints.style.left = (left = pos.left - overlapX - offsetLeft) + \"px\";\n    }\n    if (scrolls) for (var node = hints.firstChild; node; node = node.nextSibling)\n      node.style.paddingRight = cm.display.nativeBarWidth + \"px\"\n\n    cm.addKeyMap(this.keyMap = buildKeyMap(completion, {\n      moveFocus: function(n, avoidWrap) { widget.changeActive(widget.selectedHint + n, avoidWrap); },\n      setFocus: function(n) { widget.changeActive(n); },\n      menuSize: function() { return widget.screenAmount(); },\n      length: completions.length,\n      close: function() { completion.close(); },\n      pick: function() { widget.pick(); },\n      data: data\n    }));\n\n    if (completion.options.closeOnUnfocus) {\n      var closingOnBlur;\n      cm.on(\"blur\", this.onBlur = function() { closingOnBlur = setTimeout(function() { completion.close(); }, 100); });\n      cm.on(\"focus\", this.onFocus = function() { clearTimeout(closingOnBlur); });\n    }\n\n    cm.on(\"scroll\", this.onScroll = function() {\n      var curScroll = cm.getScrollInfo(), editor = cm.getWrapperElement().getBoundingClientRect();\n      if (!startScroll) startScroll = cm.getScrollInfo();\n      var newTop = top + startScroll.top - curScroll.top;\n      var point = newTop - (parentWindow.pageYOffset || (ownerDocument.documentElement || ownerDocument.body).scrollTop);\n      if (!below) point += hints.offsetHeight;\n      if (point <= editor.top || point >= editor.bottom) return completion.close();\n      hints.style.top = newTop + \"px\";\n      hints.style.left = (left + startScroll.left - curScroll.left) + \"px\";\n    });\n\n    CodeMirror.on(hints, \"dblclick\", function(e) {\n      var t = getHintElement(hints, e.target || e.srcElement);\n      if (t && t.hintId != null) {widget.changeActive(t.hintId); widget.pick();}\n    });\n\n    CodeMirror.on(hints, \"click\", function(e) {\n      var t = getHintElement(hints, e.target || e.srcElement);\n      if (t && t.hintId != null) {\n        widget.changeActive(t.hintId);\n        if (completion.options.completeOnSingleClick) widget.pick();\n      }\n    });\n\n    CodeMirror.on(hints, \"mousedown\", function() {\n      setTimeout(function(){cm.focus();}, 20);\n    });\n\n    // The first hint doesn't need to be scrolled to on init\n    var selectedHintRange = this.getSelectedHintRange();\n    if (selectedHintRange.from !== 0 || selectedHintRange.to !== 0) {\n      this.scrollToActive();\n    }\n\n    CodeMirror.signal(data, \"select\", completions[this.selectedHint], hints.childNodes[this.selectedHint]);\n    return true;\n  }\n\n  Widget.prototype = {\n    close: function() {\n      if (this.completion.widget != this) return;\n      this.completion.widget = null;\n      if (this.hints.parentNode) this.hints.parentNode.removeChild(this.hints);\n      this.completion.cm.removeKeyMap(this.keyMap);\n      var input = this.completion.cm.getInputField()\n      input.removeAttribute(\"aria-activedescendant\")\n      input.removeAttribute(\"aria-owns\")\n\n      var cm = this.completion.cm;\n      if (this.completion.options.closeOnUnfocus) {\n        cm.off(\"blur\", this.onBlur);\n        cm.off(\"focus\", this.onFocus);\n      }\n      cm.off(\"scroll\", this.onScroll);\n    },\n\n    disable: function() {\n      this.completion.cm.removeKeyMap(this.keyMap);\n      var widget = this;\n      this.keyMap = {Enter: function() { widget.picked = true; }};\n      this.completion.cm.addKeyMap(this.keyMap);\n    },\n\n    pick: function() {\n      this.completion.pick(this.data, this.selectedHint);\n    },\n\n    changeActive: function(i, avoidWrap) {\n      if (i >= this.data.list.length)\n        i = avoidWrap ? this.data.list.length - 1 : 0;\n      else if (i < 0)\n        i = avoidWrap ? 0  : this.data.list.length - 1;\n      if (this.selectedHint == i) return;\n      var node = this.hints.childNodes[this.selectedHint];\n      if (node) {\n        node.className = node.className.replace(\" \" + ACTIVE_HINT_ELEMENT_CLASS, \"\");\n        node.removeAttribute(\"aria-selected\")\n      }\n      node = this.hints.childNodes[this.selectedHint = i];\n      node.className += \" \" + ACTIVE_HINT_ELEMENT_CLASS;\n      node.setAttribute(\"aria-selected\", \"true\")\n      this.completion.cm.getInputField().setAttribute(\"aria-activedescendant\", node.id)\n      this.scrollToActive()\n      CodeMirror.signal(this.data, \"select\", this.data.list[this.selectedHint], node);\n    },\n\n    scrollToActive: function() {\n      var selectedHintRange = this.getSelectedHintRange();\n      var node1 = this.hints.childNodes[selectedHintRange.from];\n      var node2 = this.hints.childNodes[selectedHintRange.to];\n      var firstNode = this.hints.firstChild;\n      if (node1.offsetTop < this.hints.scrollTop)\n        this.hints.scrollTop = node1.offsetTop - firstNode.offsetTop;\n      else if (node2.offsetTop + node2.offsetHeight > this.hints.scrollTop + this.hints.clientHeight)\n        this.hints.scrollTop = node2.offsetTop + node2.offsetHeight - this.hints.clientHeight + firstNode.offsetTop;\n    },\n\n    screenAmount: function() {\n      return Math.floor(this.hints.clientHeight / this.hints.firstChild.offsetHeight) || 1;\n    },\n\n    getSelectedHintRange: function() {\n      var margin = this.completion.options.scrollMargin || 0;\n      return {\n        from: Math.max(0, this.selectedHint - margin),\n        to: Math.min(this.data.list.length - 1, this.selectedHint + margin),\n      };\n    }\n  };\n\n  function applicableHelpers(cm, helpers) {\n    if (!cm.somethingSelected()) return helpers\n    var result = []\n    for (var i = 0; i < helpers.length; i++)\n      if (helpers[i].supportsSelection) result.push(helpers[i])\n    return result\n  }\n\n  function fetchHints(hint, cm, options, callback) {\n    if (hint.async) {\n      hint(cm, callback, options)\n    } else {\n      var result = hint(cm, options)\n      if (result && result.then) result.then(callback)\n      else callback(result)\n    }\n  }\n\n  function resolveAutoHints(cm, pos) {\n    var helpers = cm.getHelpers(pos, \"hint\"), words\n    if (helpers.length) {\n      var resolved = function(cm, callback, options) {\n        var app = applicableHelpers(cm, helpers);\n        function run(i) {\n          if (i == app.length) return callback(null)\n          fetchHints(app[i], cm, options, function(result) {\n            if (result && result.list.length > 0) callback(result)\n            else run(i + 1)\n          })\n        }\n        run(0)\n      }\n      resolved.async = true\n      resolved.supportsSelection = true\n      return resolved\n    } else if (words = cm.getHelper(cm.getCursor(), \"hintWords\")) {\n      return function(cm) { return CodeMirror.hint.fromList(cm, {words: words}) }\n    } else if (CodeMirror.hint.anyword) {\n      return function(cm, options) { return CodeMirror.hint.anyword(cm, options) }\n    } else {\n      return function() {}\n    }\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"auto\", {\n    resolve: resolveAutoHints\n  });\n\n  CodeMirror.registerHelper(\"hint\", \"fromList\", function(cm, options) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur)\n    var term, from = CodeMirror.Pos(cur.line, token.start), to = cur\n    if (token.start < cur.ch && /\\w/.test(token.string.charAt(cur.ch - token.start - 1))) {\n      term = token.string.substr(0, cur.ch - token.start)\n    } else {\n      term = \"\"\n      from = cur\n    }\n    var found = [];\n    for (var i = 0; i < options.words.length; i++) {\n      var word = options.words[i];\n      if (word.slice(0, term.length) == term)\n        found.push(word);\n    }\n\n    if (found.length) return {list: found, from: from, to: to};\n  });\n\n  CodeMirror.commands.autocomplete = CodeMirror.showHint;\n\n  var defaultOptions = {\n    hint: CodeMirror.hint.auto,\n    completeSingle: true,\n    alignWithWord: true,\n    closeCharacters: /[\\s()\\[\\]{};:>,]/,\n    closeOnPick: true,\n    closeOnUnfocus: true,\n    updateOnCursorActivity: true,\n    completeOnSingleClick: true,\n    container: null,\n    customKeys: null,\n    extraKeys: null,\n    paddingForScrollbar: true,\n    moveOnOverlap: true,\n  };\n\n  CodeMirror.defineOption(\"hintOptions\", null);\n});\n"],"names":["CodeMirror","registerHelper","editor","options","schema","externalFragments","autocompleteOptions","cur","getCursor","token","getTokenAt","tokenStart","type","test","string","start","end","position","Position","line","results","list","getAutocompleteSuggestions","getValue","map","item","_a","text","rawInsert","label","description","documentation","isDeprecated","deprecationReason","from","ch","to","length","Pos","signal","HINT_ELEMENT_CLASS","ACTIVE_HINT_ELEMENT_CLASS","Completion","cm","this","widget","debounce","tick","startPos","startLen","getLine","getSelection","updateOnCursorActivity","self","on","activityFunc","cursorActivity","showHint","getHints","async","newOpts","hint","prop","defineExtension","parseOptions","selections","listSelections","somethingSelected","supportsSelection","i","head","anchor","state","completionActive","close","completion","update","requestAnimationFrame","window","fn","setTimeout","cancelAnimationFrame","clearTimeout","pos","hintOptions","out","defaultOptions","resolve","getText","buildKeyMap","handle","baseMap","Up","moveFocus","Down","PageUp","menuSize","PageDown","Home","setFocus","End","Enter","pick","Tab","Esc","navigator","platform","custom","customKeys","ourMap","addBinding","key2","val","bound","hasOwnProperty","key","extra","extraKeys","getHintElement","hintsElement","el","nodeName","toUpperCase","parentNode","Widget","data","id","Math","floor","random","picked","ownerDocument","getInputField","parentWindow","defaultView","hints","createElement","setAttribute","theme","className","selectedHint","completions","elt","appendChild","render","createTextNode","displayText","hintId","container","body","cursorCoords","alignWithWord","left","top","bottom","below","offsetLeft","offsetTop","offsetParent","indexOf","getComputedStyle","offsetParentPosition","getBoundingClientRect","bodyPosition","scrollLeft","scrollTop","style","winW","innerWidth","max","offsetWidth","documentElement","winH","innerHeight","offsetHeight","startScroll","box","moveOnOverlap","DOMRect","scrolls","paddingForScrollbar","scrollHeight","clientHeight","getScrollInfo","height","cursor","closingOnBlur","overlapX","right","display","nativeBarWidth","width","node","firstChild","nextSibling","paddingRight","addKeyMap","keyMap","n","avoidWrap","changeActive","screenAmount","closeOnUnfocus","onBlur","onFocus","onScroll","curScroll","getWrapperElement","newTop","point","pageYOffset","e","t","target","srcElement","completeOnSingleClick","focus","selectedHintRange","getSelectedHintRange","scrollToActive","childNodes","applicableHelpers","helpers","result","push","fetchHints","callback","then","resolveAutoHints","words","getHelpers","resolved","cm2","app","run","getHelper","fromList","anyword","prototype","active","off","operation","replaceRange","scrollIntoView","closeOnPick","identStart","closeCharacters","charAt","disable","first","myTick","finishUpdate","completeSingle","removeChild","removeKeyMap","input","removeAttribute","replace","node1","node2","firstNode","margin","scrollMargin","min","term","substr","found","word","slice","commands","autocomplete","auto","defineOption","mod","requireCodemirror"],"sourceRoot":""}