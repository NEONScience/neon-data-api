{"version":3,"file":"static/js/499.c2a5e0a5.chunk.js","mappings":"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","sources":["../../../node_modules/node_modules/codemirror/addon/lint/lint.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {getAnnotations: conf};\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n    for (var prop in defaults) this.options[prop] = defaults[prop];\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function(line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    })\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      // filter out duplicate messages\n      var message = [];\n      anns = anns.filter(function(item) { return message.indexOf(item.message) > -1 ? false : message.push(item.message) });\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n      // use original annotations[line] to show multiple messages\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1,\n                                                       options.tooltips));\n\n      if (options.highlightLines)\n        cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    startLinting(this);\n  });\n});\n"],"names":["CodeMirror","GUTTER_ID","LINT_LINE_ID","showTooltip","cm","e","content","tt","document","createElement","position","e2","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","poll","setInterval","n","nodeType","host","clearInterval","LintState","conf","hasGutter","prop","this","marked","Function","getAnnotations","linterOptions","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearMarks","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","makeMarker","labels","severity","multiple","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","then","issues","annotationsNotSorted","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","to","markText","__annotation","setGutterMarker","addLineClass","onChange","clearTimeout","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","gutters","getOption","hasLintGutter","defineExtension","mod","requireCodemirror"],"sourceRoot":""}