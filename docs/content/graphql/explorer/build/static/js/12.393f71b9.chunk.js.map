{"version":3,"file":"static/js/12.393f71b9.chunk.js","mappings":"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","sources":["../../../node_modules/@graphiql/react/dist/searchcursor.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar searchcursor$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var Pos = CodeMirror.Pos;\n    function regexpFlags(regexp) {\n      var flags = regexp.flags;\n      return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n    }\n    __name(regexpFlags, \"regexpFlags\");\n    function ensureFlags(regexp, flags) {\n      var current = regexpFlags(regexp), target = current;\n      for (var i = 0; i < flags.length; i++)\n        if (target.indexOf(flags.charAt(i)) == -1)\n          target += flags.charAt(i);\n      return current == target ? regexp : new RegExp(regexp.source, target);\n    }\n    __name(ensureFlags, \"ensureFlags\");\n    function maybeMultiline(regexp) {\n      return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n    }\n    __name(maybeMultiline, \"maybeMultiline\");\n    function searchRegexpForward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n        regexp.lastIndex = ch;\n        var string = doc.getLine(line), match = regexp.exec(string);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpForward, \"searchRegexpForward\");\n    function searchRegexpForwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpForward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunk = 1;\n      for (var line = start.line, last = doc.lastLine(); line <= last; ) {\n        for (var i = 0; i < chunk; i++) {\n          if (line > last)\n            break;\n          var curLine = doc.getLine(line++);\n          string = string == null ? curLine : string + \"\\n\" + curLine;\n        }\n        chunk = chunk * 2;\n        regexp.lastIndex = start.ch;\n        var match = regexp.exec(string);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpForwardMultiline, \"searchRegexpForwardMultiline\");\n    function lastMatchIn(string, regexp, endMargin) {\n      var match, from = 0;\n      while (from <= string.length) {\n        regexp.lastIndex = from;\n        var newMatch = regexp.exec(string);\n        if (!newMatch)\n          break;\n        var end = newMatch.index + newMatch[0].length;\n        if (end > string.length - endMargin)\n          break;\n        if (!match || end > match.index + match[0].length)\n          match = newMatch;\n        from = newMatch.index + 1;\n      }\n      return match;\n    }\n    __name(lastMatchIn, \"lastMatchIn\");\n    function searchRegexpBackward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n        var string = doc.getLine(line);\n        var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpBackward, \"searchRegexpBackward\");\n    function searchRegexpBackwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpBackward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch;\n      for (var line = start.line, first = doc.firstLine(); line >= first; ) {\n        for (var i = 0; i < chunkSize && line >= first; i++) {\n          var curLine = doc.getLine(line--);\n          string = string == null ? curLine : curLine + \"\\n\" + string;\n        }\n        chunkSize *= 2;\n        var match = lastMatchIn(string, regexp, endMargin);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = line + before.length, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpBackwardMultiline, \"searchRegexpBackwardMultiline\");\n    var doFold, noFold;\n    if (String.prototype.normalize) {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\").toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\");\n      }, \"noFold\");\n    } else {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str;\n      }, \"noFold\");\n    }\n    function adjustPos(orig, folded, pos, foldFunc) {\n      if (orig.length == folded.length)\n        return pos;\n      for (var min = 0, max = pos + Math.max(0, orig.length - folded.length); ; ) {\n        if (min == max)\n          return min;\n        var mid = min + max >> 1;\n        var len = foldFunc(orig.slice(0, mid)).length;\n        if (len == pos)\n          return mid;\n        else if (len > pos)\n          max = mid;\n        else\n          min = mid + 1;\n      }\n    }\n    __name(adjustPos, \"adjustPos\");\n    function searchStringForward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n          var orig = doc.getLine(line).slice(ch), string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.indexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            var start = adjustPos(orig, string, found, fold) + ch;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n            };\n          } else {\n            var cutFrom = string.length - lines[0].length;\n            if (string.slice(cutFrom) != lines[0])\n              continue search;\n            for (var i = 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(line + i)) != lines[i])\n                continue search;\n            var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1];\n            if (endString.slice(0, lastLine.length) != lastLine)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n              to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringForward, \"searchStringForward\");\n    function searchStringBackward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n          var orig = doc.getLine(line);\n          if (ch > -1)\n            orig = orig.slice(0, ch);\n          var string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.lastIndexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold)),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n            };\n          } else {\n            var lastLine = lines[lines.length - 1];\n            if (string.slice(0, lastLine.length) != lastLine)\n              continue search;\n            for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(start + i)) != lines[i])\n                continue search;\n            var top = doc.getLine(line + 1 - lines.length), topString = fold(top);\n            if (topString.slice(topString.length - lines[0].length) != lines[0])\n              continue search;\n            return {\n              from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n              to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringBackward, \"searchStringBackward\");\n    function SearchCursor(doc, query, pos, options) {\n      this.atOccurrence = false;\n      this.afterEmptyMatch = false;\n      this.doc = doc;\n      pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n      this.pos = { from: pos, to: pos };\n      var caseFold;\n      if (typeof options == \"object\") {\n        caseFold = options.caseFold;\n      } else {\n        caseFold = options;\n        options = null;\n      }\n      if (typeof query == \"string\") {\n        if (caseFold == null)\n          caseFold = false;\n        this.matches = function(reverse, pos2) {\n          return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos2, caseFold);\n        };\n      } else {\n        query = ensureFlags(query, \"gm\");\n        if (!options || options.multiline !== false)\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos2);\n          };\n        else\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos2);\n          };\n      }\n    }\n    __name(SearchCursor, \"SearchCursor\");\n    SearchCursor.prototype = {\n      findNext: function() {\n        return this.find(false);\n      },\n      findPrevious: function() {\n        return this.find(true);\n      },\n      find: function(reverse) {\n        var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n        if (this.afterEmptyMatch && this.atOccurrence) {\n          head = Pos(head.line, head.ch);\n          if (reverse) {\n            head.ch--;\n            if (head.ch < 0) {\n              head.line--;\n              head.ch = (this.doc.getLine(head.line) || \"\").length;\n            }\n          } else {\n            head.ch++;\n            if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n              head.ch = 0;\n              head.line++;\n            }\n          }\n          if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n            return this.atOccurrence = false;\n          }\n        }\n        var result = this.matches(reverse, head);\n        this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0;\n        if (result) {\n          this.pos = result;\n          this.atOccurrence = true;\n          return this.pos.match || true;\n        } else {\n          var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n          this.pos = { from: end, to: end };\n          return this.atOccurrence = false;\n        }\n      },\n      from: function() {\n        if (this.atOccurrence)\n          return this.pos.from;\n      },\n      to: function() {\n        if (this.atOccurrence)\n          return this.pos.to;\n      },\n      replace: function(newText, origin) {\n        if (!this.atOccurrence)\n          return;\n        var lines = CodeMirror.splitLines(newText);\n        this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n        this.pos.to = Pos(this.pos.from.line + lines.length - 1, lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0));\n      }\n    };\n    CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this.doc, query, pos, caseFold);\n    });\n    CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this, query, pos, caseFold);\n    });\n    CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n      var ranges = [];\n      var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n      while (cur.findNext()) {\n        if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0)\n          break;\n        ranges.push({ anchor: cur.from(), head: cur.to() });\n      }\n      if (ranges.length)\n        this.setSelections(ranges, 0);\n    });\n  });\n})();\nvar searchcursor = searchcursor$2.exports;\nvar searchcursor$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": searchcursor\n}, [searchcursor$2.exports]));\nexport { searchcursor$2 as a, searchcursor$1 as s };\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","_mergeNamespaces","n","m","forEach","e","Array","isArray","keys","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","searchcursor$2","exports","CodeMirror","doFold","noFold","Pos","regexpFlags","regexp","flags","ignoreCase","global","multiline","ensureFlags","current","i","length","indexOf","charAt","RegExp","source","maybeMultiline","test","searchRegexpForward","doc","start","line","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","searchRegexpForwardMultiline","chunk","curLine","before","slice","split","inside","startLine","startCh","lastMatchIn","endMargin","newMatch","end","searchRegexpBackward","first","firstLine","searchRegexpBackwardMultiline","chunkSize","adjustPos","orig","folded","pos","foldFunc","min","max","Math","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","searchStringBackward","lastIndexOf","top","topString","SearchCursor","options","this","atOccurrence","afterEmptyMatch","clipPos","matches","reverse","pos2","String","prototype","normalize","str","toLowerCase","findNext","find","findPrevious","head","cmpPos","result","replace","newText","origin","splitLines","replaceRange","defineExtension","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","setSelections","mod","codemirror","searchcursor","searchcursor$1","__proto__","Symbol","toStringTag"],"sourceRoot":""}