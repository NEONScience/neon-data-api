{"version":3,"file":"static/js/424.45ca232c.chunk.js","mappings":"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","sources":["../../../node_modules/codemirror-graphql/src/info.ts","../../../node_modules/codemirror-graphql/src/utils/SchemaReference.ts","../../../node_modules/codemirror-graphql/src/utils/forEachState.ts","../../../node_modules/codemirror-graphql/src/utils/getTypeInfo.ts","../../../node_modules/codemirror-graphql/src/utils/info-addon.ts"],"sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport {\n  GraphQLDirective,\n  GraphQLEnumType,\n  GraphQLEnumValue,\n  GraphQLInputField,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLSchema,\n  GraphQLType,\n} from 'graphql';\nimport CodeMirror from 'codemirror';\n\nimport getTypeInfo, { TypeInfo } from './utils/getTypeInfo';\nimport {\n  getArgumentReference,\n  getDirectiveReference,\n  getEnumValueReference,\n  getFieldReference,\n  getTypeReference,\n  SchemaReference,\n} from './utils/SchemaReference';\nimport './utils/info-addon';\nimport type { Maybe } from 'graphql-language-service';\n\nexport interface GraphQLInfoOptions {\n  schema?: GraphQLSchema;\n  onClick?: Maybe<(ref: Maybe<SchemaReference>, e: MouseEvent) => void>;\n  renderDescription?: (str: string) => string;\n  render?: () => string;\n}\n\n/**\n * Registers GraphQL \"info\" tooltips for CodeMirror.\n *\n * When hovering over a token, this presents a tooltip explaining it.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - hoverTime: The number of ms to wait before showing info. (Default 500)\n *   - renderDescription: Convert a description to some HTML, Useful since\n *                        descriptions are often Markdown formatted.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\nCodeMirror.registerHelper(\n  'info',\n  'graphql',\n  (token: CodeMirror.Token, options: GraphQLInfoOptions) => {\n    if (!options.schema || !token.state) {\n      return;\n    }\n\n    const state = token.state;\n    const kind = state.kind;\n    const step = state.step;\n    const typeInfo = getTypeInfo(options.schema, token.state);\n\n    // Given a Schema and a Token, produce the contents of an info tooltip.\n    // To do this, create a div element that we will render \"into\" and then pass\n    // it to various rendering functions.\n    if (\n      (kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n      (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)\n    ) {\n      const into = document.createElement('div');\n      renderField(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.fieldDef as any);\n      return into;\n    } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n      const into = document.createElement('div');\n      renderDirective(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.directiveDef);\n      return into;\n    } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n      const into = document.createElement('div');\n      renderArg(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.argDef);\n      return into;\n    } else if (\n      kind === 'EnumValue' &&\n      typeInfo.enumValue &&\n      typeInfo.enumValue.description\n    ) {\n      const into = document.createElement('div');\n      renderEnumValue(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.enumValue);\n      return into;\n    } else if (\n      kind === 'NamedType' &&\n      typeInfo.type &&\n      (typeInfo.type as GraphQLObjectType).description\n    ) {\n      const into = document.createElement('div');\n      renderType(into, typeInfo, options, typeInfo.type);\n      renderDescription(into, options, typeInfo.type);\n      return into;\n    }\n  },\n);\n\nfunction renderField(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  renderQualifiedField(into, typeInfo, options);\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.type);\n}\n\nfunction renderQualifiedField(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const fieldName = typeInfo.fieldDef?.name || '';\n  if (fieldName.slice(0, 2) !== '__') {\n    renderType(into, typeInfo, options, typeInfo.parentType);\n    text(into, '.');\n  }\n  text(into, fieldName, 'field-name', options, getFieldReference(typeInfo));\n}\n\nfunction renderDirective(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = '@' + (typeInfo.directiveDef?.name || '');\n  text(into, name, 'directive-name', options, getDirectiveReference(typeInfo));\n}\n\nfunction renderArg(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  if (typeInfo.directiveDef) {\n    renderDirective(into, typeInfo, options);\n  } else if (typeInfo.fieldDef) {\n    renderQualifiedField(into, typeInfo, options);\n  }\n\n  const name = typeInfo.argDef?.name || '';\n  text(into, '(');\n  text(into, name, 'arg-name', options, getArgumentReference(typeInfo));\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.inputType);\n  text(into, ')');\n}\n\nfunction renderTypeAnnotation(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n  t: Maybe<GraphQLType>,\n) {\n  text(into, ': ');\n  renderType(into, typeInfo, options, t);\n}\n\nfunction renderEnumValue(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = typeInfo.enumValue?.name || '';\n  renderType(into, typeInfo, options, typeInfo.inputType);\n  text(into, '.');\n  text(into, name, 'enum-value', options, getEnumValueReference(typeInfo));\n}\n\nfunction renderType(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n  t: Maybe<GraphQLType>,\n) {\n  if (t instanceof GraphQLNonNull) {\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, '!');\n  } else if (t instanceof GraphQLList) {\n    text(into, '[');\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, ']');\n  } else {\n    text(\n      into,\n      t?.name || '',\n      'type-name',\n      options,\n      getTypeReference(typeInfo, t),\n    );\n  }\n}\n\nfunction renderDescription(\n  into: HTMLElement,\n  options: GraphQLInfoOptions,\n  def:\n    | GraphQLInputField\n    | GraphQLEnumType\n    | GraphQLDirective\n    | GraphQLEnumValue\n    | GraphQLType,\n) {\n  const description = (def as GraphQLInputField).description;\n  if (description) {\n    const descriptionDiv = document.createElement('div');\n    descriptionDiv.className = 'info-description';\n    if (options.renderDescription) {\n      descriptionDiv.innerHTML = options.renderDescription(description);\n    } else {\n      descriptionDiv.appendChild(document.createTextNode(description));\n    }\n    into.appendChild(descriptionDiv);\n  }\n\n  renderDeprecation(into, options, def);\n}\n\nfunction renderDeprecation(\n  into: HTMLElement,\n  options: GraphQLInfoOptions,\n  def:\n    | GraphQLInputField\n    | GraphQLEnumType\n    | GraphQLDirective\n    | GraphQLEnumValue\n    | GraphQLType,\n) {\n  const reason = (def as GraphQLInputField).deprecationReason;\n  if (reason) {\n    const deprecationDiv = document.createElement('div');\n    deprecationDiv.className = 'info-deprecation';\n    if (options.renderDescription) {\n      deprecationDiv.innerHTML = options.renderDescription(reason);\n    } else {\n      deprecationDiv.appendChild(document.createTextNode(reason));\n    }\n    const label = document.createElement('span');\n    label.className = 'info-deprecation-label';\n    label.appendChild(document.createTextNode('Deprecated: '));\n    deprecationDiv.insertBefore(label, deprecationDiv.firstChild);\n    into.appendChild(deprecationDiv);\n  }\n}\n\nfunction text(\n  into: HTMLElement,\n  content: string,\n  className = '',\n  options: GraphQLInfoOptions = { onClick: null },\n  ref: Maybe<SchemaReference> = null,\n) {\n  if (className) {\n    const onClick = options.onClick;\n    let node;\n    if (onClick) {\n      node = document.createElement('a');\n\n      // Providing a href forces proper a tag behavior, though we don't actually\n      // want clicking the node to navigate anywhere.\n      node.href = 'javascript:void 0'; // eslint-disable-line no-script-url\n      node.addEventListener('click', (e: MouseEvent) => {\n        onClick(ref, e);\n      });\n    } else {\n      node = document.createElement('span');\n    }\n    node.className = className;\n    node.appendChild(document.createTextNode(content));\n    into.appendChild(node);\n  } else {\n    into.appendChild(document.createTextNode(content));\n  }\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport { getNamedType, GraphQLSchema } from 'graphql';\n\nimport type {\n  GraphQLArgument,\n  GraphQLDirective,\n  GraphQLEnumValue,\n  GraphQLEnumType,\n  GraphQLField,\n  GraphQLNamedType,\n} from 'graphql';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport { TypeInfo } from './getTypeInfo';\n\nexport type SchemaReference =\n  | FieldReference\n  | DirectiveReference\n  | ArgumentReference\n  | EnumValueReference\n  | TypeReference;\n\nexport type FieldReference = {\n  kind: 'Field';\n  field: GraphQLField<any, any>;\n  type: Maybe<GraphQLNamedType>;\n  schema?: GraphQLSchema;\n};\n\nexport type DirectiveReference = {\n  kind: 'Directive';\n  directive: GraphQLDirective;\n  schema?: GraphQLSchema;\n};\n\nexport type ArgumentReference = {\n  kind: 'Argument';\n  argument: GraphQLArgument;\n  field?: GraphQLField<any, any>;\n  type?: GraphQLNamedType;\n  directive?: GraphQLDirective;\n  schema?: GraphQLSchema;\n};\n\nexport type EnumValueReference = {\n  kind: 'EnumValue';\n  value?: GraphQLEnumValue;\n  type?: GraphQLEnumType;\n  schema?: GraphQLSchema;\n};\n\nexport type TypeReference = {\n  kind: 'Type';\n  type: GraphQLNamedType;\n  schema?: GraphQLSchema;\n};\n\nexport function getFieldReference(typeInfo: any): FieldReference {\n  return {\n    kind: 'Field',\n    schema: typeInfo.schema,\n    field: typeInfo.fieldDef,\n    type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n  };\n}\n\nexport function getDirectiveReference(typeInfo: any): DirectiveReference {\n  return {\n    kind: 'Directive',\n    schema: typeInfo.schema,\n    directive: typeInfo.directiveDef,\n  };\n}\n\nexport function getArgumentReference(typeInfo: any): ArgumentReference {\n  return typeInfo.directiveDef\n    ? {\n        kind: 'Argument',\n        schema: typeInfo.schema,\n        argument: typeInfo.argDef,\n        directive: typeInfo.directiveDef,\n      }\n    : {\n        kind: 'Argument',\n        schema: typeInfo.schema,\n        argument: typeInfo.argDef,\n        field: typeInfo.fieldDef,\n        type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n      };\n}\n\nexport function getEnumValueReference(typeInfo: TypeInfo): EnumValueReference {\n  return {\n    kind: 'EnumValue',\n    value: typeInfo.enumValue || undefined,\n    // $FlowFixMe\n    type: typeInfo.inputType\n      ? (getNamedType(typeInfo.inputType) as GraphQLEnumType)\n      : undefined,\n  };\n}\n\n// Note: for reusability, getTypeReference can produce a reference to any type,\n// though it defaults to the current type.\nexport function getTypeReference(\n  typeInfo: any,\n  type?: Maybe<GraphQLNamedType>,\n): TypeReference {\n  return {\n    kind: 'Type',\n    schema: typeInfo.schema,\n    type: type || typeInfo.type,\n  };\n}\n\nfunction isMetaField(fieldDef: GraphQLField<any, any>) {\n  return fieldDef.name.slice(0, 2) === '__';\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { State, Maybe } from 'graphql-language-service';\n\n// Utility for iterating through a CodeMirror parse state stack bottom-up.\nexport default function forEachState(stack: State, fn: (state: State) => void) {\n  const reverseStateStack = [];\n  let state: Maybe<State> = stack;\n  while (state && state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport {\n  isCompositeType,\n  getNullableType,\n  getNamedType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLSchema,\n  GraphQLType,\n  GraphQLObjectType,\n  GraphQLField,\n  GraphQLDirective,\n  GraphQLArgument,\n  GraphQLInputType,\n  GraphQLEnumValue,\n  GraphQLInputFieldMap,\n} from 'graphql';\nimport type { State, Maybe } from 'graphql-language-service';\n\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from 'graphql/type/introspection';\n\nimport forEachState from './forEachState';\n\nexport interface TypeInfo {\n  schema: GraphQLSchema;\n  type?: Maybe<GraphQLType>;\n  parentType?: Maybe<GraphQLType>;\n  inputType?: Maybe<GraphQLInputType>;\n  directiveDef?: Maybe<GraphQLDirective>;\n  fieldDef?: Maybe<GraphQLField<any, any>>;\n  argDef?: Maybe<GraphQLArgument>;\n  argDefs?: Maybe<GraphQLArgument[]>;\n  enumValue?: Maybe<GraphQLEnumValue>;\n  objectFieldDefs?: Maybe<GraphQLInputFieldMap>;\n}\n\n/**\n * Utility for collecting rich type information given any token's state\n * from the graphql-mode parser.\n */\nexport default function getTypeInfo(schema: GraphQLSchema, tokenState: State) {\n  const info: TypeInfo = {\n    schema,\n    type: null,\n    parentType: null,\n    inputType: null,\n    directiveDef: null,\n    fieldDef: null,\n    argDef: null,\n    argDefs: null,\n    objectFieldDefs: null,\n  };\n\n  forEachState(tokenState, (state: State) => {\n    switch (state.kind) {\n      case 'Query':\n      case 'ShortQuery':\n        info.type = schema.getQueryType();\n        break;\n      case 'Mutation':\n        info.type = schema.getMutationType();\n        break;\n      case 'Subscription':\n        info.type = schema.getSubscriptionType();\n        break;\n      case 'InlineFragment':\n      case 'FragmentDefinition':\n        if (state.type) {\n          info.type = schema.getType(state.type);\n        }\n        break;\n      case 'Field':\n      case 'AliasedField':\n        info.fieldDef =\n          info.type && state.name\n            ? getFieldDef(schema, info.parentType, state.name)\n            : null;\n        info.type = info.fieldDef && info.fieldDef.type;\n        break;\n      case 'SelectionSet':\n        info.parentType = info.type ? getNamedType(info.type) : null;\n        break;\n      case 'Directive':\n        info.directiveDef = state.name ? schema.getDirective(state.name) : null;\n        break;\n      case 'Arguments':\n        const parentDef = state.prevState\n          ? state.prevState.kind === 'Field'\n            ? info.fieldDef\n            : state.prevState.kind === 'Directive'\n            ? info.directiveDef\n            : state.prevState.kind === 'AliasedField'\n            ? state.prevState.name &&\n              getFieldDef(schema, info.parentType, state.prevState.name)\n            : null\n          : null;\n        info.argDefs = parentDef ? (parentDef.args as GraphQLArgument[]) : null;\n        break;\n      case 'Argument':\n        info.argDef = null;\n        if (info.argDefs) {\n          for (let i = 0; i < info.argDefs.length; i++) {\n            if (info.argDefs[i].name === state.name) {\n              info.argDef = info.argDefs[i];\n              break;\n            }\n          }\n        }\n        info.inputType = info.argDef && info.argDef.type;\n        break;\n      case 'EnumValue':\n        const enumType = info.inputType ? getNamedType(info.inputType) : null;\n        info.enumValue =\n          enumType instanceof GraphQLEnumType\n            ? find(\n                enumType.getValues() as GraphQLEnumValue[],\n                val => val.value === state.name,\n              )\n            : null;\n        break;\n      case 'ListValue':\n        const nullableType = info.inputType\n          ? getNullableType(info.inputType)\n          : null;\n        info.inputType =\n          nullableType instanceof GraphQLList ? nullableType.ofType : null;\n        break;\n      case 'ObjectValue':\n        const objectType = info.inputType ? getNamedType(info.inputType) : null;\n        info.objectFieldDefs =\n          objectType instanceof GraphQLInputObjectType\n            ? objectType.getFields()\n            : null;\n        break;\n      case 'ObjectField':\n        const objectField =\n          state.name && info.objectFieldDefs\n            ? info.objectFieldDefs[state.name]\n            : null;\n        info.inputType = objectField && objectField.type;\n        break;\n      case 'NamedType':\n        info.type = state.name ? schema.getType(state.name) : null;\n        break;\n    }\n  });\n\n  return info;\n}\n\n// Gets the field definition given a type and field name\nfunction getFieldDef(\n  schema: GraphQLSchema,\n  type: Maybe<GraphQLType>,\n  fieldName: string,\n) {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n    return SchemaMetaFieldDef;\n  }\n  if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n    return TypeMetaFieldDef;\n  }\n  if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n    return TypeNameMetaFieldDef;\n  }\n  if (type && (type as GraphQLObjectType).getFields) {\n    return (type as GraphQLObjectType).getFields()[fieldName];\n  }\n}\n\n// Returns the first item in the array which causes predicate to return truthy.\nfunction find<T>(array: T[], predicate: (item: T) => boolean) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      return array[i];\n    }\n  }\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport { GraphQLInfoOptions } from '../info';\n\nCodeMirror.defineOption(\n  'info',\n  false,\n  (\n    cm: CodeMirror.Editor,\n    options: GraphQLInfoOptions,\n    old?: GraphQLInfoOptions,\n  ) => {\n    if (old && old !== CodeMirror.Init) {\n      const oldOnMouseOver = cm.state.info.onMouseOver;\n      CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n      clearTimeout(cm.state.info.hoverTimeout);\n      delete cm.state.info;\n    }\n\n    if (options) {\n      const state: Record<string, any> = (cm.state.info = createState(options));\n      state.onMouseOver = onMouseOver.bind(null, cm);\n      CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n    }\n  },\n);\n\nfunction createState(options: GraphQLInfoOptions) {\n  return {\n    options:\n      options instanceof Function\n        ? { render: options }\n        : options === true\n        ? {}\n        : options,\n  };\n}\n\nfunction getHoverTime(cm: CodeMirror.Editor) {\n  const options = cm.state.info.options;\n  return (options && options.hoverTime) || 500;\n}\n\nfunction onMouseOver(cm: CodeMirror.Editor, e: MouseEvent) {\n  const state = cm.state.info;\n\n  const target = e.target || e.srcElement;\n\n  if (!(target instanceof HTMLElement)) {\n    return;\n  }\n  if (target.nodeName !== 'SPAN' || state.hoverTimeout !== undefined) {\n    return;\n  }\n\n  const box = target.getBoundingClientRect();\n\n  const onMouseMove = function () {\n    clearTimeout(state.hoverTimeout);\n    state.hoverTimeout = setTimeout(onHover, hoverTime);\n  };\n\n  const onMouseOut = function () {\n    CodeMirror.off(document, 'mousemove', onMouseMove);\n    CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n    clearTimeout(state.hoverTimeout);\n    state.hoverTimeout = undefined;\n  };\n\n  const onHover = function () {\n    CodeMirror.off(document, 'mousemove', onMouseMove);\n    CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n    state.hoverTimeout = undefined;\n    onMouseHover(cm, box);\n  };\n\n  const hoverTime = getHoverTime(cm);\n  state.hoverTimeout = setTimeout(onHover, hoverTime);\n\n  CodeMirror.on(document, 'mousemove', onMouseMove);\n  CodeMirror.on(cm.getWrapperElement(), 'mouseout', onMouseOut);\n}\n\nfunction onMouseHover(cm: CodeMirror.Editor, box: DOMRect) {\n  const pos = cm.coordsChar({\n    left: (box.left + box.right) / 2,\n    top: (box.top + box.bottom) / 2,\n  });\n\n  const state = cm.state.info;\n  const options = state.options;\n  const render = options.render || cm.getHelper(pos, 'info');\n  if (render) {\n    const token = cm.getTokenAt(pos, true);\n    if (token) {\n      const info: HTMLDivElement = render(token, options, cm, pos);\n      if (info) {\n        showPopup(cm, box, info);\n      }\n    }\n  }\n}\n\nfunction showPopup(cm: CodeMirror.Editor, box: DOMRect, info: HTMLDivElement) {\n  const popup = document.createElement('div');\n  popup.className = 'CodeMirror-info';\n  popup.appendChild(info);\n  document.body.appendChild(popup);\n\n  const popupBox = popup.getBoundingClientRect();\n  const popupStyle = window.getComputedStyle(popup);\n  const popupWidth =\n    popupBox.right -\n    popupBox.left +\n    parseFloat(popupStyle.marginLeft) +\n    parseFloat(popupStyle.marginRight);\n  const popupHeight =\n    popupBox.bottom -\n    popupBox.top +\n    parseFloat(popupStyle.marginTop) +\n    parseFloat(popupStyle.marginBottom);\n\n  let topPos = box.bottom;\n  if (\n    popupHeight > window.innerHeight - box.bottom - 15 &&\n    box.top > window.innerHeight - box.bottom\n  ) {\n    topPos = box.top - popupHeight;\n  }\n\n  if (topPos < 0) {\n    topPos = box.bottom;\n  }\n\n  let leftPos = Math.max(0, window.innerWidth - popupWidth - 15);\n  if (leftPos > box.left) {\n    leftPos = box.left;\n  }\n\n  popup.style.opacity = '1';\n  popup.style.top = topPos + 'px';\n  popup.style.left = leftPos + 'px';\n\n  let popupTimeout: NodeJS.Timeout;\n\n  const onMouseOverPopup = function () {\n    clearTimeout(popupTimeout);\n  };\n\n  const onMouseOut = function () {\n    clearTimeout(popupTimeout);\n    popupTimeout = setTimeout(hidePopup, 200);\n  };\n\n  const hidePopup = function () {\n    CodeMirror.off(popup, 'mouseover', onMouseOverPopup);\n    CodeMirror.off(popup, 'mouseout', onMouseOut);\n    CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n\n    if (popup.style.opacity) {\n      popup.style.opacity = '0';\n      setTimeout(() => {\n        if (popup.parentNode) {\n          popup.parentNode.removeChild(popup);\n        }\n      }, 600);\n    } else if (popup.parentNode) {\n      popup.parentNode.removeChild(popup);\n    }\n  };\n\n  CodeMirror.on(popup, 'mouseover', onMouseOverPopup);\n  CodeMirror.on(popup, 'mouseout', onMouseOut);\n  CodeMirror.on(cm.getWrapperElement(), 'mouseout', onMouseOut);\n}\n"],"names":["renderQualifiedField","into","typeInfo","options","fieldName","fieldDef","_a","name","slice","renderType","parentType","text","SchemaReference_1","renderDirective","directiveDef","renderTypeAnnotation","t","graphql_1","ofType","renderDescription","def","description","descriptionDiv","document","createElement","className","innerHTML","appendChild","createTextNode","reason","deprecationReason","deprecationDiv","label","insertBefore","firstChild","renderDeprecation","content","ref","onClick","onClick_1","node","href","addEventListener","e","require","codemirror_1","registerHelper","token","schema","state","kind","step","getTypeInfo_1","type","renderField","argDef","inputType","renderArg","enumValue","renderEnumValue","isMetaField","exports","field","directive","argument","value","undefined","stack","fn","reverseStateStack","push","prevState","i","length","getFieldDef","introspection_1","getQueryType","getFields","tokenState","info","argDefs","objectFieldDefs","forEachState_1","getMutationType","getSubscriptionType","getType","getDirective","parentDef","args","enumType","array","predicate","find","getValues","val","nullableType","objectType","objectField","onMouseOver","cm","target","srcElement","HTMLElement","nodeName","hoverTimeout","box","getBoundingClientRect","onMouseMove","clearTimeout","setTimeout","onHover","hoverTime","onMouseOut","off","getWrapperElement","pos","coordsChar","left","right","top","bottom","render","getHelper","getTokenAt","popup","body","popupBox","popupStyle","window","getComputedStyle","popupWidth","parseFloat","marginLeft","marginRight","popupHeight","marginTop","marginBottom","topPos","innerHeight","popupTimeout","leftPos","Math","max","innerWidth","style","opacity","onMouseOverPopup","hidePopup","parentNode","removeChild","on","showPopup","onMouseHover","getHoverTime","defineOption","old","Init","oldOnMouseOver","Function","createState","bind"],"sourceRoot":""}