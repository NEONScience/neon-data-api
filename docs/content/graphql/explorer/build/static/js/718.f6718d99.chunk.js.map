{"version":3,"file":"static/js/718.f6718d99.chunk.js","mappings":"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","sources":["../../../node_modules/codemirror/addon/fold/foldcode.js","../../../node_modules/codemirror/addon/fold/foldgutter.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"],"names":["CodeMirror","doFold","cm","pos","options","force","call","finder","getOption","Pos","minSize","getRange","allowFolded","range","to","line","from","marks","findMarksAt","i","length","__isFold","cleared","clear","firstLine","myWidget","makeWidget","on","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","document","createTextNode","createElement","appendChild","className","cloneNode","newFoldFunction","rangeFinder","defineExtension","this","commands","toggleFold","foldCode","getCursor","fold","unfold","scanUp","foldAll","operation","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","cur","defaultOptions","auto","minFoldSize","name","undefined","editorOptions","foldOptions","defineOption","mod","require","val","old","Init","clearGutter","state","foldGutter","gutter","off","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","opts","indicatorOpen","indicatorFolded","isFolded","findMarks","fromPos","find","marker","spec","elt","updateFoldInfo","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","test","setGutterMarker","cls","RegExp","vp","getViewport","folded","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"sourceRoot":""}