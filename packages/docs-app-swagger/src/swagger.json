{
  "swagger": "2.0",
  "info": {
    "version": "0.6.0",
    "title": "NEON Data API Requests",
    "description": "Expand the options below, click GET, and then click TRY IT OUT to see example calls."
  },
  "basePath": "/api/v0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "X-API-Token": {
      "type": "apiKey",
      "name": "X-API-Token",
      "in": "header"
    }
  },
  "security": [
    {
      "X-API-Token": []
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "description": "Get information about all data products",
        "tags": [
          "Products"
        ],
        "operationId": "Get_products_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get availability for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of data products",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/product"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/products/{productCode}": {
      "get": {
        "description": "Get information about a data product",
        "tags": [
          "Products"
        ],
        "operationId": "Get_products_productCode_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "Data product to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get availability for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single data product",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/product"
                }
              }
            }
          },
          "400": {
            "description": "Product(s) not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/sites": {
      "get": {
        "description": "Get information about all field sites",
        "tags": [
          "Sites"
        ],
        "operationId": "Get_sites_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get availability for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of field sites",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sites/{siteCode}": {
      "get": {
        "description": "Get information about a field site",
        "tags": [
          "Sites"
        ],
        "operationId": "Get_sites:siteCode_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get availability for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single site",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/site"
                }
              }
            }
          },
          "400": {
            "description": "Site(s) not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases": {
      "get": {
        "description": "Get information about all available data releases",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of data releases",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/release"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseIdentifier}": {
      "get": {
        "description": "Get information about a data release",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_releaseIdentifier_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "releaseIdentifier",
            "in": "path",
            "description": "Release tag or UUID to get information for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single data release",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/release"
                }
              }
            }
          },
          "400": {
            "description": "Release(s) not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/products": {
      "get": {
        "description": "Get information about all data products within a specific release",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_products_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of data products",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/product"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/products/{productCode}": {
      "get": {
        "description": "Get information about a data product within a specific release",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_products_productCode_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Data product to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single data product",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/product"
                }
              }
            }
          },
          "400": {
            "description": "Product(s) not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/sites": {
      "get": {
        "description": "Get information about all sites within a specific release",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_sites_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sites",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/site"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/sites/{siteCode}": {
      "get": {
        "description": "Get information about a field site within a specific release",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_sites:siteCode_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single site",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/site"
                }
              }
            }
          },
          "400": {
            "description": "Site(s) not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/data/{productCode}/{siteCode}/{year-month}": {
      "get": {
        "description": "Get files available for a given release and product/site/month combination",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_data:availability_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "year-month",
            "in": "path",
            "description": "YYYY-MM month to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "package",
            "in": "query",
            "description": "Package type to return, basic or expanded",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "expanded"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Available files",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/data"
                }
              }
            }
          },
          "400": {
            "description": "Product, site not found or invalid date range specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/data/{productCode}/{siteCode}/{year-month}/{filename}": {
      "get": {
        "description": "Get a file for a given release and product/site/month/filename combination",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_data:availability_file_",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "year-month",
            "in": "path",
            "description": "YYYY-MM month to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "package",
            "in": "query",
            "description": "Package type to return, basic or expanded",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "expanded"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Available file data",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "302": {
            "description": "Found available file and redirects to data",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Invalid file name specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/releases/{releaseTag}/data/package/{productCode}/{siteCode}/{year-month}": {
      "get": {
        "description": "Get a data package for a given release and product/site/month and package combination",
        "tags": [
          "Releases"
        ],
        "operationId": "Get_releases_data:availability_package_",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "releaseTag",
            "in": "path",
            "description": "The name of the release to get availability for",
            "required": true,
            "type": "string"
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "year-month",
            "in": "path",
            "description": "YYYY-MM month to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "package",
            "in": "query",
            "description": "Package type to return, basic or expanded",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "expanded"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Available data package as zip",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product, site, or month specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/data/{productCode}/{siteCode}/{year-month}": {
      "get": {
        "description": "Get files available for a given product/site/month combination",
        "tags": [
          "Data"
        ],
        "operationId": "Get_data:availability_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "Product to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "year-month",
            "in": "path",
            "description": "YYYY-MM month to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "package",
            "in": "query",
            "description": "Package type to return, basic or expanded",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "expanded"
            ]
          },
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available files",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/data"
                }
              }
            }
          },
          "400": {
            "description": "Product, site not found or invalid date range specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/data/{productCode}/{siteCode}/{year-month}/{filename}": {
      "get": {
        "description": "Get a file for a given product/site/month/filename combination",
        "tags": [
          "Data"
        ],
        "operationId": "Get_data:availability_file_",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "Product to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "year-month",
            "in": "path",
            "description": "YYYY-MM month to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the file",
            "required": true,
            "type": "string"
          },
          {
            "name": "package",
            "in": "query",
            "description": "Package type to return, basic or expanded",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "expanded"
            ]
          },
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available file data",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "302": {
            "description": "Found available file and redirects to data",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Invalid file name specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/data/package/{productCode}/{siteCode}/{year-month}": {
      "get": {
        "description": "Get a data package for a given product/site/month and package combination",
        "tags": [
          "Data"
        ],
        "operationId": "Get_data:availability_package_",
        "produces": [
          "application/zip"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "Product to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteCode",
            "in": "path",
            "description": "Site to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "year-month",
            "in": "path",
            "description": "YYYY-MM month to check for files",
            "required": true,
            "type": "string"
          },
          {
            "name": "package",
            "in": "query",
            "description": "Package type to return, basic or expanded",
            "required": false,
            "type": "string",
            "enum": [
              "basic",
              "expanded"
            ]
          },
          {
            "name": "release",
            "in": "query",
            "description": "The name of the release to get for",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available data package as zip",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid product, site, or month specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/locations/{locationName}": {
      "get": {
        "description": "Get information about a location",
        "tags": [
          "Locations"
        ],
        "operationId": "Get_locations:locationName_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locationName",
            "in": "path",
            "description": "Location to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "history",
            "in": "query",
            "description": "Option to obtain location history information",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hierarchy",
            "in": "query",
            "description": "Option to obtain location hierarchy information",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "locationType",
            "in": "query",
            "description": "\"When obtaining location hierarchy, specify a type of descendant to query for. For example, to obtain the location hierarchy for all towers at location CPER, utilize: /CPER?hierarchy=true&locationType=TOWER\"",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single location",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/location"
                }
              }
            }
          },
          "400": {
            "description": "Location(s) not found",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/locations/sites": {
      "get": {
        "description": "Get information about the site-level locations",
        "tags": [
          "Locations",
          "Sites"
        ],
        "operationId": "Get_locations_sites_",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of locations",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/location"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/taxonomy": {
      "get": {
        "description": "Get taxonomic lists",
        "tags": [
          "Taxonomy"
        ],
        "operationId": "Get_taxonomy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taxonTypeCode",
            "in": "query",
            "description": "Taxon type code to get. Must not be used in conjunction with a taxon rank query parameter.",
            "required": false,
            "enum": [
              "ALGAE",
              "BEETLE",
              "BIRD",
              "FISH",
              "HERPETOLOGY",
              "MACROINVERTEBRATE",
              "MOSQUITO",
              "MOSQUITO_PATHOGENS",
              "SMALL_MAMMAL",
              "PLANT",
              "TICK"
            ],
            "type": "string"
          },
          {
            "name": "kingdom",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "phylum",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "division",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "class",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "family",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "genus",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "scientificname",
            "in": "query",
            "description": "The taxon rank to get. Must not be used in conjunction with taxon type code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Get verbose result set",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items to limit the result set to",
            "required": false,
            "type": "integer"
          },
          {
            "name": "stream",
            "in": "query",
            "description": "Option to obtain the result as a stream. Utilize for large requests.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "List of taxonomic information",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "The number of results in the current paged response"
                },
                "total": {
                  "type": "integer",
                  "description": "The total number of results for the query"
                },
                "prev": {
                  "type": "string",
                  "format": "uri",
                  "description": "Link to the previous page of results when available"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "description": "Link to the next page of results when available"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxonomy"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Taxonomic data does not exist for specified query",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/samples/view": {
      "get": {
        "description": "For a given sample identifier, get a list of sample custody events as well as any parent and child sample identifiers that currently exist.",
        "tags": [
          "Samples"
        ],
        "operationId": "Get_samplesByTagClass",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sampleTag",
            "in": "query",
            "description": "Sample Tag of interest.  Must be used in conjunction with a Sample Class only.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sampleClass",
            "in": "query",
            "description": "Sample Class of interest. Must be used in conjunction with a Sample Tag only.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sampleUuid",
            "in": "query",
            "description": "UUID of Sample.  Must be used on its own.",
            "required": false,
            "type": "string"
          },
          {
            "name": "barcode",
            "in": "query",
            "description": "Barcode of Sample.  Must be used on its own.",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveGuid",
            "in": "query",
            "description": "archiveGuid of Sample.  Must be used on its own.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sample views.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/views"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Sample Not Found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/samples/classes": {
      "get": {
        "description": "Get a list of Sample Classes for a given Sample Tag",
        "tags": [
          "Samples"
        ],
        "operationId": "Get_sampleClasses:sampleTag_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sampleTag",
            "in": "query",
            "description": "Sample Tag of interest",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sample classes for a given Sample Tag",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/classes"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Sample Not Found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/samples/supportedClasses": {
      "get": {
        "description": "Get a list of sample classes and descriptions currently available",
        "tags": [
          "Samples"
        ],
        "operationId": "Get_supportedSampleClasses",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of supported sample classes and their descriptions",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/supportedClasses"
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/samples/download": {
      "get": {
        "description": "Get a list of sample views for a given sample identifier and search degree.",
        "tags": [
          "Samples"
        ],
        "operationId": "Get_samplesDownloadBySampleTagClass",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sampleTag",
            "in": "query",
            "description": "Sample Tag of interest.  Must be used in conjunction with a Sample Class only.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sampleClass",
            "in": "query",
            "description": "Sample Class of interest. Must be used in conjunction with a Sample Tag only.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sampleUuid",
            "in": "query",
            "description": "UUID of Sample.  Must be used on its own.",
            "required": false,
            "type": "string"
          },
          {
            "name": "barcode",
            "in": "query",
            "description": "Barcode of Sample.  Must be used on its own.",
            "required": false,
            "type": "string"
          },
          {
            "name": "archiveGuid",
            "in": "query",
            "description": "archiveGuid of Sample.  Must be used on its own.",
            "required": false,
            "type": "string"
          },
          {
            "name": "degree",
            "in": "query",
            "description": "degree of sample search",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "list of sample views",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/views"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Sample Not Found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/prototype/datasets": {
      "get": {
        "description": "Get information about all prototype datasets",
        "tags": [
          "Prototype Datasets"
        ],
        "operationId": "Get_prototype_datasets_",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "List of prototype datasets",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/prototypeDataset"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/prototype/datasets/{uuid}": {
      "get": {
        "description": "Get information about a prototype dataset",
        "tags": [
          "Prototype Datasets"
        ],
        "operationId": "Get_prototype_datasets_uuid_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Prototype dataset UUID to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Single prototype dataset",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/prototypeDataset"
                }
              }
            }
          },
          "400": {
            "description": "Prototype dataset not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/prototype/data/{uuid}": {
      "get": {
        "description": "Get information about data files for the prototype dataset",
        "tags": [
          "Prototype Datasets"
        ],
        "operationId": "Get_prototype_data_uuid_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Prototype dataset UUID to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available data for the prototype dataset",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/prototypeDatasetData"
                }
              }
            }
          },
          "400": {
            "description": "Prototype dataset not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/prototype/data/{uuid}/{filename}": {
      "get": {
        "description": "Gets a data file",
        "tags": [
          "Prototype Datasets"
        ],
        "operationId": "Get_prototype_data_uuid_file_",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "Prototype dataset UUID to get",
            "required": true,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "path",
            "description": "The name of the data file",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available file data",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "302": {
            "description": "Found available file and redirects to data",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Invalid file name specified",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/error"
                  }
                }
              }
            }
          },
          "default": {
            "description": "General error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "product": {
      "type": "object",
      "properties": {
        "productCodeLong": {
          "type": "string",
          "description": "Revisioned, long code for the data product (NEON.DOM.SITE.DP1.00001.001, etc)"
        },
        "productCode": {
          "type": "string",
          "description": "Revisioned, shortened code for the data product (DP1.00001.001, DP1.10072.001, etc)"
        },
        "productCodePresentation": {
          "type": "string",
          "description": "Shortened product code"
        },
        "productName": {
          "type": "string",
          "description": "The name of the data product."
        },
        "productDescription": {
          "type": "string",
          "description": "A brief description of the data product."
        },
        "productStatus": {
          "type": "string",
          "enum": [
            "FUTURE",
            "ACTIVE",
            "RETIRED"
          ],
          "description": "Future, active, or retired product status"
        },
        "productCategory": {
          "type": "string",
          "description": "Level 1, 2, 3, or 4 data product"
        },
        "productHasExpanded": {
          "type": "boolean",
          "description": "Whether a data product has expanded data"
        },
        "productScienceTeamAbbr": {
          "type": "string",
          "description": "Three letter abbreviation for the science team responsible for the data product"
        },
        "productScienceTeam": {
          "type": "string",
          "description": "Science team responsible for the data product"
        },
        "productPublicationFormatType": {
          "type": "string",
          "description": "Class of publication system used during the publication process; can be independent from productScienceTeam."
        },
        "productAbstract": {
          "type": "string",
          "description": "An abstract for the data product"
        },
        "productDesignDescription": {
          "type": "string",
          "description": "A design description of the data product"
        },
        "productStudyDescription": {
          "type": "string",
          "description": "A study description of the data product"
        },
        "productBasicDescription": {
          "type": "string",
          "description": "A description of the basic package available for download"
        },
        "productExpandedDescription": {
          "type": "string",
          "description": "A description of the expanded package available for download"
        },
        "productSensor": {
          "type": "string",
          "description": "A description of the sensor utilized by the data product"
        },
        "productRemarks": {
          "type": "string",
          "description": "Remarks about the data product"
        },
        "themes": {
          "type": "array",
          "description": "List of themes to which the data product belongs.",
          "items": {
            "type": "string"
          }
        },
        "changeLogs": {
          "type": "array",
          "description": "List of issues and associated details for the product.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "format": "int",
                "description": "The identifier for the issue."
              },
              "parentIssueID": {
                "type": "number",
                "format": "int",
                "description": "The identifier for the parent issue that this issue is associated with."
              },
              "issueDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time associated with the creation of the issue."
              },
              "resolvedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time associated with the resolution of the issue."
              },
              "dateRangeStart": {
                "type": "string",
                "format": "date-time",
                "description": "The start of the date interval that this issue impacts the data product."
              },
              "dateRangeEnd": {
                "type": "string",
                "format": "date-time",
                "description": "The end of the date interval that this issue impacts the data product."
              },
              "locationAffected": {
                "type": "string",
                "description": "The locations affected by this issue."
              },
              "issue": {
                "type": "string",
                "description": "The description of the issue."
              },
              "resolution": {
                "type": "string",
                "description": "The description of the resolution applied for this issue."
              }
            }
          }
        },
        "specs": {
          "type": "array",
          "description": "List of documents associated with the data product.",
          "items": {
            "$ref": "#/definitions/spec"
          }
        },
        "keywords": {
          "type": "array",
          "description": "List of words and phrases associated with the data product",
          "items": {
            "type": "string"
          }
        },
        "releases": {
          "type": "array",
          "description": "List of releases that this product has available data within.",
          "items": {
            "type": "object",
            "properties": {
              "release": {
                "type": "string",
                "description": "The name of the release"
              },
              "generationDate": {
                "type": "string",
                "format": "date-time",
                "description": "The generation date of the release."
              },
              "url": {
                "type": "string",
                "description": "The URL to the API endpoint that references the release."
              },
              "productDoi": {
                "type": "object",
                "description": "A description for the DOI associated with the product and release.",
                "properties": {
                  "generationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The generation date of the DOI."
                  },
                  "url": {
                    "type": "string",
                    "description": "The DOI URL for the product and release."
                  }
                }
              }
            }
          }
        },
        "siteCodes": {
          "type": "array",
          "description": "List of sites and months of available data",
          "items": {
            "type": "object",
            "properties": {
              "siteCode": {
                "type": "string",
                "description": "Four character code for the site"
              },
              "availableMonths": {
                "type": "array",
                "description": "List of years and months that products are available. Formatted as YYYY-MM.",
                "items": {
                  "type": "string"
                }
              },
              "availableDataUrls": {
                "type": "array",
                "description": "List of data urls for products that are available.",
                "items": {
                  "type": "string"
                }
              },
              "availableReleases": {
                "type": "array",
                "description": "List of available releases and months contained within each release.",
                "items": {
                  "type": "object",
                  "properties": {
                    "release": {
                      "type": "string",
                      "description": "The name of the release."
                    },
                    "availableMonths": {
                      "type": "array",
                      "description": "List of years and months that products are available within for this release. Formatted as YYYY-MM.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "spec": {
      "type": "object",
      "properties": {
        "specId": {
          "type": "string",
          "description": "Document identifier for the associated document."
        },
        "specNumber": {
          "type": "string",
          "description": "The specification number or name for the associated document."
        },
        "specType": {
          "type": "string",
          "description": "The MIME type of the associated document."
        },
        "specSize": {
          "type": "number",
          "format": "int",
          "description": "The size in bytes of the associated document."
        },
        "specDescription": {
          "type": "string",
          "description": "Description of the associated document."
        }
      }
    },
    "site": {
      "type": "object",
      "properties": {
        "siteCode": {
          "type": "string",
          "description": "Four character code for the site"
        },
        "siteName": {
          "type": "string",
          "description": "Full name for the site"
        },
        "siteDescription": {
          "type": "string",
          "description": "Brief site description"
        },
        "siteType": {
          "type": "string",
          "enum": [
            "CORE",
            "GRADIENT"
          ],
          "description": "Core or Gradient site"
        },
        "siteLatitude": {
          "type": "number",
          "description": "Point latitude for the site"
        },
        "siteLongitude": {
          "type": "number",
          "description": "Point longitude for the site"
        },
        "domainCode": {
          "type": "string",
          "description": "Three character domain abbreviation (D01, D02, etc) for the domain this site is in"
        },
        "stateCode": {
          "type": "string",
          "description": "Two letter state code that this site is in"
        },
        "stateName": {
          "type": "string",
          "description": "Full name of the state or territory that this site is in"
        },
        "domainName": {
          "type": "string",
          "description": "Brief description for the domain this site is in"
        },
        "deimsId": {
          "type": "string",
          "description": "Dynamic Ecological Information Management System - Site and dataset registry (DEIMS-SDR) ID for the site, see deims.org"
        },
        "releases": {
          "type": "array",
          "description": "List of releases that this site has available data within.",
          "items": {
            "type": "object",
            "properties": {
              "release": {
                "type": "string",
                "description": "The name of the release"
              },
              "generationDate": {
                "type": "string",
                "format": "date-time",
                "description": "The generation date of the release."
              },
              "url": {
                "type": "string",
                "description": "The URL to the API endpoint that references the release."
              }
            }
          }
        },
        "dataProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/productAvailability"
          }
        }
      }
    },
    "productAvailability": {
      "type": "object",
      "properties": {
        "dataProductCode": {
          "type": "string",
          "description": "Revisioned, shortened code for the data product (DP1.00001.001, DP1.10072.001, etc)"
        },
        "dataProductTitle": {
          "type": "string",
          "description": "Full title for the data product."
        },
        "availableMonths": {
          "type": "array",
          "description": "List of years and months that products are available.  Formatted as YYYY-MM.",
          "items": {
            "type": "string"
          }
        },
        "availableDataUrls": {
          "type": "array",
          "description": "List of data urls for products that are available.",
          "items": {
            "type": "string"
          }
        },
        "availableReleases": {
          "type": "array",
          "description": "List of available releases and months contained within each release.",
          "items": {
            "type": "object",
            "properties": {
              "release": {
                "type": "string",
                "description": "The name of the release."
              },
              "availableMonths": {
                "type": "array",
                "description": "List of years and months that products are available within for this release. Formatted as YYYY-MM.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "data": {
      "type": "object",
      "properties": {
        "productCode": {
          "type": "string",
          "description": "The product code."
        },
        "siteCode": {
          "type": "string",
          "description": "The four letter site code."
        },
        "month": {
          "type": "string",
          "description": "The available month. Formatted as YYYY-MM."
        },
        "release": {
          "type": "string",
          "description": "The name of the associated release."
        },
        "packages": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of package."
              },
              "url": {
                "type": "string",
                "description": "The URL to the data package API endpoint."
              }
            }
          }
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/file"
          }
        },
        "externalData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/externalData"
          }
        }
      }
    },
    "file": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Filename",
          "type": "string"
        },
        "size": {
          "description": "File size in bytes",
          "type": "number",
          "format": "int"
        },
        "md5": {
          "description": "MD5 value in hex",
          "type": "string"
        },
        "crc32": {
          "description": "CRC-32 value in hex",
          "type": "string"
        },
        "url": {
          "description": "Download URL",
          "type": "string"
        }
      }
    },
    "externalData": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the external data object.",
          "type": "string"
        },
        "type": {
          "description": "The type of external data link provided.",
          "type": "string"
        },
        "url": {
          "description": "URL to external data.",
          "type": "string"
        }
      }
    },
    "release": {
      "type": "object",
      "properties": {
        "release": {
          "type": "string",
          "description": "The name or \"tag\" of the release."
        },
        "uuid": {
          "type": "string",
          "description": "The UUID associated with the release."
        },
        "generationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Generation date of the release."
        },
        "artifacts": {
          "type": "array",
          "description": "The set of artifacts associated with the release.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the artifact."
              },
              "type": {
                "type": "string",
                "description": "The type of the artifact."
              },
              "url": {
                "type": "string",
                "description": "The download URL for the artifact"
              },
              "size": {
                "type": "number",
                "format": "int",
                "description": "The file size in bytes."
              },
              "md5": {
                "type": "string",
                "description": "MD5 value in hex"
              }
            }
          }
        },
        "dataProducts": {
          "type": "array",
          "description": "The set of available data products within the release.",
          "items": {
            "type": "object",
            "properties": {
              "productCode": {
                "type": "string",
                "description": "Revisioned, shortened code for the data product (DP1.00001.001, DP1.10072.001, etc)"
              },
              "productName": {
                "type": "string",
                "description": "The name of the data product."
              },
              "productDescription": {
                "type": "string",
                "description": "A brief description of the data product."
              },
              "productDoi": {
                "type": "string",
                "description": "The DOI for the product within the release."
              }
            }
          }
        }
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "locationName": {
          "type": "string",
          "description": "Name of the location"
        },
        "locationDescription": {
          "type": "string",
          "description": "A description of the location."
        },
        "locationType": {
          "type": "string"
        },
        "domainCode": {
          "type": "string",
          "description": "Three character domain abbreviation (D01, D02, etc) for the domain this site is in"
        },
        "siteCode": {
          "type": "string",
          "description": "Four character code for the site"
        },
        "locationDecimalLatitude": {
          "type": "number",
          "format": "double",
          "description": "Decimal latitude for the location."
        },
        "locationDecimalLongitude": {
          "type": "number",
          "format": "double",
          "description": "Decimal longitude for the location."
        },
        "locationElevation": {
          "type": "number",
          "format": "double",
          "description": "Elevation for the location."
        },
        "locationUtmEasting": {
          "type": "number",
          "format": "double",
          "description": "The Universal Transverse Mercator easting."
        },
        "locationUtmNorthing": {
          "type": "number",
          "format": "double",
          "description": "The Universal Transverse Mercator northing."
        },
        "locationUtmZone": {
          "type": "number",
          "format": "int",
          "description": "The integer Universal Transverse Mercator zone."
        },
        "locationUtmHemisphere": {
          "type": "string",
          "description": "The single character Universal Transverse Mercator hemisphere."
        },
        "alphaOrientation": {
          "type": "number",
          "format": "double",
          "description": "The elevation or pitch angle (in degrees) in the vertical plane at which a sensor is oriented relative to the horizontal plane."
        },
        "betaOrientation": {
          "type": "number",
          "format": "double",
          "description": "The roll angle (in degrees) about the longitudinal axis of the sensor at which the sensor is oriented."
        },
        "gammaOrientation": {
          "type": "number",
          "format": "double",
          "description": "The azimuth or yaw angle (in degrees) at which a sensor is facing relative to true North."
        },
        "xOffset": {
          "type": "number",
          "format": "double",
          "description": "Cartesian offsets of a sensor, in meters, west (positive values) or east (negative values) relative to the reference location."
        },
        "yOffset": {
          "type": "number",
          "format": "double",
          "description": "Cartesian offsets of a sensor, in meters, south (positive values) or north (negative values) relative to the reference location."
        },
        "zOffset": {
          "type": "number",
          "format": "double",
          "description": "Cartesian offsets of a sensor, in meters, up (positive values) or down (negative values) relative to the reference location."
        },
        "offsetLocation": {
          "type": "object",
          "$ref": "#/definitions/location",
          "description": "The named location used as a reference point. Offsets are relative to this location."
        },
        "locationPolygon": {
          "type": "object",
          "properties": {
            "coordinates": {
              "type": "array",
              "description": "A list of vertices that define the closed structure for the polygon",
              "items": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Decimal latitude for the polygon coordinate."
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Decimal longitude for the polygon coordinate."
                  },
                  "elevation": {
                    "type": "number",
                    "format": "double",
                    "description": "Elevation for the polygon coordinate."
                  }
                }
              }
            }
          }
        },
        "activePeriods": {
          "type": "array",
          "description": "List of active periods for the location",
          "items": {
            "type": "object",
            "properties": {
              "activatedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The activation date for the time period"
              },
              "deactivatedDate": {
                "type": "string",
                "format": "date-time",
                "description": "The deactivation date for the time period"
              }
            }
          }
        },
        "locationProperties": {
          "type": "array",
          "description": "List of properties associated with the location.  Contents vary based on the type of location.",
          "items": {
            "type": "object",
            "properties": {
              "locationPropertyValue": {
                "type": "string",
                "description": "Can be a string or a number"
              },
              "locationPropertyName": {
                "type": "string"
              }
            }
          }
        },
        "locationHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/locationHistory"
          }
        },
        "locationParent": {
          "type": "string",
          "description": "Name of the location that this location is in."
        },
        "locationParentUrl": {
          "type": "string",
          "description": "URL to request location data for the parent of this location."
        },
        "locationParentHierarchy": {
          "type": "object",
          "description": "When querying for the hierarchy, the location's parent hierarchy",
          "$ref": "#/definitions/locationParentHierarchy"
        },
        "locationChildren": {
          "type": "array",
          "description": "A list of names of locations within this location.",
          "items": {
            "type": "string"
          }
        },
        "locationChildrenUrls": {
          "type": "array",
          "description": "A list of URLs to request location data for the children of this location.",
          "items": {
            "type": "string"
          }
        },
        "locationChildHierarchy": {
          "type": "array",
          "description": "When querying for the hierarchy, the location's set of immediate children and associated hierarchy",
          "items": {
            "type": "object",
            "$ref": "#/definitions/locationChildHierarchy"
          }
        }
      }
    },
    "locationHistory": {
      "type": "object",
      "properties": {
        "current": {
          "type": "boolean",
          "description": "Indicates if this is the current location for this location."
        },
        "locationStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start date and time for this location."
        },
        "locationEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "The end date and time for this location."
        },
        "locationDecimalLatitude": {
          "type": "number",
          "format": "double",
          "description": "Decimal latitude for the location."
        },
        "locationDecimalLongitude": {
          "type": "number",
          "format": "double",
          "description": "Decimal longitude for the location."
        },
        "locationElevation": {
          "type": "number",
          "format": "double",
          "description": "Elevation for the location."
        },
        "locationUtmEasting": {
          "type": "number",
          "format": "double",
          "description": "The Universal Transverse Mercator easting."
        },
        "locationUtmNorthing": {
          "type": "number",
          "format": "double",
          "description": "The Universal Transverse Mercator northing."
        },
        "locationUtmHemisphere": {
          "type": "string",
          "description": "The single character Universal Transverse Mercator hemisphere."
        },
        "locationUtmZone": {
          "type": "number",
          "format": "int",
          "description": "The integer Universal Transverse Mercator zone."
        },
        "alphaOrientation": {
          "type": "number",
          "format": "double",
          "description": "The elevation or pitch angle (in degrees) in the vertical plane at which a sensor is oriented relative to the horizontal plane."
        },
        "betaOrientation": {
          "type": "number",
          "format": "double",
          "description": "The roll angle (in degrees) about the longitudinal axis of the sensor at which the sensor is oriented."
        },
        "gammaOrientation": {
          "type": "number",
          "format": "double",
          "description": "The azimuth or yaw angle (in degrees) at which a sensor is facing relative to true North."
        },
        "xOffset": {
          "type": "number",
          "format": "double",
          "description": "Cartesian offsets of a sensor, in meters, west (positive values) or east (negative values) relative to the reference location."
        },
        "yOffset": {
          "type": "number",
          "format": "double",
          "description": "Cartesian offsets of a sensor, in meters, south (positive values) or north (negative values) relative to the reference location."
        },
        "zOffset": {
          "type": "number",
          "format": "double",
          "description": "Cartesian offsets of a sensor, in meters, up (positive values) or down (negative values) relative to the reference location."
        },
        "locationPolygon": {
          "type": "object",
          "properties": {
            "coordinates": {
              "type": "array",
              "description": "A list of vertices that define the closed structure for the polygon",
              "items": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Decimal latitude for the polygon coordinate."
                  },
                  "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "Decimal longitude for the polygon coordinate."
                  },
                  "elevation": {
                    "type": "number",
                    "format": "double",
                    "description": "Elevation for the polygon coordinate."
                  }
                }
              }
            }
          }
        },
        "locationProperties": {
          "type": "array",
          "description": "List of properties associated with the location.  Contents vary based on the type of location.",
          "items": {
            "type": "object",
            "properties": {
              "locationPropertyValue": {
                "type": "string",
                "description": "Can be a string or a number"
              },
              "locationPropertyName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "locationParentHierarchy": {
      "type": "object",
      "properties": {
        "locationName": {
          "type": "string",
          "description": "Name of the location"
        },
        "locationType": {
          "type": "string",
          "description": "Type of the location"
        },
        "locationParent": {
          "type": "string",
          "description": "Name of the location that this location is in."
        },
        "locationParentUrl": {
          "type": "string",
          "description": "URL to request location data for the parent of this location."
        },
        "locationParentHierarchy": {
          "type": "object",
          "description": "The location's parent hierarchy"
        }
      }
    },
    "locationChildHierarchy": {
      "type": "object",
      "properties": {
        "locationName": {
          "type": "string",
          "description": "Name of the location"
        },
        "locationType": {
          "type": "string",
          "description": "Type of the location"
        },
        "locationDescription": {
          "type": "string",
          "description": "A description of the location."
        },
        "locationChildHierarchy": {
          "type": "array",
          "description": "The location's child hierarchy",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "taxonomy": {
      "type": "object",
      "properties": {
        "taxonTypeCode": {
          "description": "NEON taxonomic grouping",
          "type": "string"
        },
        "taxonID": {
          "description": "NEON taxonomic code",
          "type": "string"
        },
        "acceptedTaxonID": {
          "description": "Accepted taxonomic code from the authoritative source (dwc:nameAccordingToID)",
          "type": "string"
        },
        "dwc:scientificName": {
          "description": "Scientific name, associated with the taxonID.  This is the name of the lowest level taxonomic rank that can be determined.  http://rs.tdwg.org/dwc/terms/scientificName",
          "type": "string"
        },
        "dwc:scientificNameAuthorship": {
          "description": "The authorship information for the scientificName formatted according to the conventions of the applicable nomenclaturalCode.  http://rs.tdwg.org/dwc/terms/scientificNameAuthorship",
          "type": "string"
        },
        "dwc:taxonRank": {
          "description": "The lowest level taxonomic rank that can be determined for the individual or specimen.  http://rs.tdwg.org/dwc/terms/taxonRank",
          "type": "string"
        },
        "dwc:vernacularName": {
          "description": "A common or vernacular name. http://rs.tdwg.org/dwc/terms/vernacularName",
          "type": "string"
        },
        "taxonProtocolCategory": {
          "description": "NEON protocol-specific categorization of the taxon",
          "type": "string"
        },
        "dwc:nameAccordingToID": {
          "description": "An identifier for the source in which the specific taxon concept circumscription is defined or implied.  http://rs.tdwg.org/dwc/terms/nameAccordingToID",
          "type": "string"
        },
        "dwc:nameAccordingToTitle": {
          "description": "The reference to the source in which the specific taxon concept circumscription is defined or implied.  http://tdwg.github.io/dwc/terms/nameAccordingTo",
          "type": "string"
        },
        "dwc:kingdom": {
          "description": "The scientific name of the kingdom in which the taxon is classified.  http://rs.tdwg.org/dwc/terms/kingdom",
          "type": "string"
        },
        "gbif:subkingdom": {
          "description": "The scientific name of the subkingdom in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subkingdom",
          "type": "string"
        },
        "gbif:infrakingdom": {
          "description": "The scientific name of the infrakingdom in which the taxon is classified",
          "type": "string"
        },
        "gbif:superdivision": {
          "description": "The scientific name of the superdivision in which the taxon is classified",
          "type": "string"
        },
        "gbif:division": {
          "description": "The scientific name of the division in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/phylum",
          "type": "string"
        },
        "gbif:subdivision": {
          "description": "The scientific name of the subdivision in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subphylum",
          "type": "string"
        },
        "gbif:infradivision": {
          "description": "The scientific name of the infradivision in which the taxon is classified",
          "type": "string"
        },
        "gbif:parvdivision": {
          "description": "The scientific name of the parvdivision in which the taxon is classified",
          "type": "string"
        },
        "gbif:superphylum": {
          "description": "The scientific name of the superphylum in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/superphylum",
          "type": "string"
        },
        "dwc:phylum": {
          "description": "The scientific name of the phylum or division in which the taxon is classified.  http://rs.tdwg.org/dwc/terms/phylum",
          "type": "string"
        },
        "gbif:subphylum": {
          "description": "The scientific name of the subphylum in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subphylum",
          "type": "string"
        },
        "gbif:infraphylum": {
          "description": "The scientific name of the infraphylum in which the taxon is classified",
          "type": "string"
        },
        "gbif:superclass": {
          "description": "The scientific name of the superclass in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/superclass",
          "type": "string"
        },
        "dwc:class": {
          "description": "The scientific name of the class in which the taxon is classified.  http://rs.tdwg.org/dwc/terms/class",
          "type": "string"
        },
        "gbif:subclass": {
          "description": "The scientific name of the subclass in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subclass",
          "type": "string"
        },
        "gbif:infraclass": {
          "description": "The scientific name of the infraclass in which the taxon is classified",
          "type": "string"
        },
        "gbif:superorder": {
          "description": "The scientific name of the superorder in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/superorder",
          "type": "string"
        },
        "dwc:order": {
          "description": "The scientific name of the order in which the taxon is classified.  http://rs.tdwg.org/dwc/terms/order",
          "type": "string"
        },
        "gbif:suborder": {
          "description": "The scientific name of the suborder in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/suborder",
          "type": "string"
        },
        "gbif:infraorder": {
          "description": "The scientific name of the infraorder in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/infraorder",
          "type": "string"
        },
        "gbif:section": {
          "description": "The scientific name of the section in which the organism is classified.  http://rs.gbif.org/vocabulary/gbif/rank/section",
          "type": "string"
        },
        "gbif:subsection": {
          "description": "The scientific name of the subsection in which the organism is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subsection",
          "type": "string"
        },
        "gbif:superfamily": {
          "description": "The scientific name of the superfamily in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/superfamily",
          "type": "string"
        },
        "dwc:family": {
          "description": "The scientific name of the family in which the taxon is classified.  http://rs.tdwg.org/dwc/terms/family",
          "type": "string"
        },
        "gbif:subfamily": {
          "description": "The scientific name of the subfamily in which the organism is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subfamily",
          "type": "string"
        },
        "gbif:tribe": {
          "description": "The scientific name of the tribe in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/tribe",
          "type": "string"
        },
        "gbif:subtribe": {
          "description": "The scientific name of the subtribe in which the taxon is classified.  http://rs.gbif.org/vocabulary/gbif/rank/subtribe",
          "type": "string"
        },
        "dwc:genus": {
          "description": "The scientific name of the genus in which the organism is classified.  http://rs.tdwg.org/dwc/terms/genus",
          "type": "string"
        },
        "dwc:subgenus": {
          "description": "The scientific name of the subgenus in which the taxon is classified.  Values should include the genus to avoid homonym confusion.  http://rs.tdwg.org/dwc/terms/subgenus",
          "type": "string"
        },
        "gbif:subspecies": {
          "description": "The subspecies (infraspecific name below the rank of infraspecific epithet) of the scientific name applied to the taxon.  http://rs.gbif.org/vocabulary/gbif/rank/subspecies",
          "type": "string"
        },
        "gbif:variety": {
          "description": "The variety (infraspecific name below the rank of infraspecific epithet) of the scientific name applied to the taxon.  http://rs.gbif.org/vocabulary/gbif/rank/variety",
          "type": "string"
        },
        "gbif:subvariety": {
          "description": "The subvariety (infraspecific name below the rank of variety) of the scientific name applied to the taxon.  http://rs.gbif.org/vocabulary/gbif/rank/subvariety",
          "type": "string"
        },
        "gbif:form": {
          "description": "The form (infraspecific name below the rank of infraspecific epithet) of the scientific name applied to the taxon.  http://rs.gbif.org/vocabulary/gbif/rank/form",
          "type": "string"
        },
        "gbif:subform": {
          "description": "The subform (infraspecific name below the rank of form) of the scientific name applied to the taxon.  http://rs.gbif.org/vocabulary/gbif/rank/subform",
          "type": "string"
        },
        "speciesGroup": {
          "description": "The unofficial species group into which the taxon is categorized",
          "type": "string"
        },
        "dwc:specificEpithet": {
          "description": "The specific epithet (second part of the species name) of the scientific name applied to the taxon.  http://rs.tdwg.org/dwc/terms/specificEpithet",
          "type": "string"
        },
        "dwc:infraspecificEpithet": {
          "description": "The infraspecific epithet (scientific name below the rank of species) of the scientific name applied to the taxon.  http://rs.tdwg.org/dwc/terms/infraspecificEpithet",
          "type": "string"
        }
      }
    },
    "sampleInfo": {
      "type": "object",
      "properties": {
        "sampleUuid": {
          "type": "string",
          "description": "UUID for a given sample"
        },
        "sampleTag": {
          "type": "string",
          "description": "Sample Tag for a given sample"
        },
        "sampleClass": {
          "type": "string",
          "description": "Sample Class for a given sample"
        },
        "barcode": {
          "type": "string",
          "description": "Sample Barcode for a given sample"
        },
        "archiveGuid": {
          "type": "string",
          "description": "Archive GUID for a given sample"
        }
      }
    },
    "views": {
      "type": "object",
      "properties": {
        "sampleViews": {
          "type": "array",
          "description": "array of sample views for a given sample",
          "items": {
            "$ref": "#/definitions/sampleView"
          }
        }
      }
    },
    "sampleView": {
      "type": "object",
      "properties": {
        "sampleUuid": {
          "type": "string",
          "description": "UUID for a given sample"
        },
        "sampleTag": {
          "type": "string",
          "description": "Sample Tag for a given sample"
        },
        "sampleClass": {
          "type": "string",
          "description": "Sample Class for a given sample"
        },
        "barcode": {
          "type": "string",
          "description": "Sample Barcode for a given sample"
        },
        "archiveGuid": {
          "type": "string",
          "description": "Archive GUID for a given sample"
        },
        "sampleEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sampleEvent"
          }
        },
        "parentSampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sampleInfo"
          }
        },
        "childSampleIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sampleInfo"
          }
        }
      }
    },
    "sampleEvent": {
      "type": "object",
      "description": "Sample Event for a given sample.",
      "properties": {
        "ingestTableName": {
          "type": "string",
          "description": "Ingest Table Name"
        },
        "smsFieldEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/smsField"
          }
        }
      }
    },
    "smsField": {
      "type": "object",
      "properties": {
        "smsKey": {
          "type": "string",
          "description": "SMS Field Name"
        },
        "smsValue": {
          "type": "string",
          "description": "SMS Field Value"
        }
      }
    },
    "entry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Sample Class Name"
        },
        "value": {
          "type": "string",
          "description": "Sample Class Description"
        }
      }
    },
    "classes": {
      "type": "object",
      "properties": {
        "sampleClasses": {
          "type": "array",
          "description": "array of Sample Classes for a given sample.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "supportedClasses": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "array of Sample Classes and their descriptions for a given sample.",
          "items": {
            "$ref": "#/definitions/entry"
          }
        }
      }
    },
    "prototypeDataset": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "The UUID of the dataset"
        },
        "projectTitle": {
          "type": "string",
          "description": "The title of the project"
        },
        "projectDescription": {
          "type": "string",
          "description": "The description of the project"
        },
        "designDescription": {
          "type": "string",
          "description": "A description of the dataset's design"
        },
        "metadataDescription": {
          "type": "string",
          "description": "A brief description of the metadata associated with the dataset"
        },
        "studyAreaDescription": {
          "type": "string",
          "description": "A description of the dataset's spatial extent"
        },
        "datasetAbstract": {
          "type": "string",
          "description": "An abstract of the dataset"
        },
        "startYear": {
          "type": "number",
          "format": "int",
          "description": "The start year for the time span of the dataset"
        },
        "endYear": {
          "type": "number",
          "format": "int",
          "description": "The end year for the time span of the dataset"
        },
        "dateUploaded": {
          "type": "string",
          "format": "date-time",
          "description": "The date the dataset was uploaded"
        },
        "isPublished": {
          "type": "boolean",
          "description": "Whether or not the dataset has been included in a publication"
        },
        "version": {
          "type": "string",
          "description": "The version of the dataset"
        },
        "versionDescription": {
          "type": "string",
          "description": "The version description"
        },
        "doi": {
          "type": "object",
          "description": "The DOI for the dataset",
          "$ref": "#/definitions/prototypeDatasetDoi"
        },
        "relatedVersions": {
          "type": "array",
          "description": "The related versions of this dataset",
          "items": {
            "$ref": "#/definitions/prototypeDatasetRelatedVersion"
          }
        },
        "data": {
          "type": "object",
          "description": "The dataset's data files",
          "$ref": "#/definitions/prototypeDatasetDataDetail"
        },
        "dataThemes": {
          "type": "array",
          "description": "List of themes to which the dataset belongs",
          "items": {
            "type": "string"
          }
        },
        "fileTypes": {
          "type": "array",
          "description": "List of file types to which the dataset belongs",
          "items": {
            "$ref": "#/definitions/prototypeFileType"
          }
        },
        "keywords": {
          "type": "array",
          "description": "List of words and phrases associated with the dataset",
          "items": {
            "type": "string"
          }
        },
        "locations": {
          "type": "array",
          "description": "List of locations of the dataset's spatial extent",
          "items": {
            "$ref": "#/definitions/prototypeLocation"
          }
        },
        "publicationCitations": {
          "type": "array",
          "description": "List of publication citations involving the dataset",
          "items": {
            "$ref": "#/definitions/prototypePublicationCitation"
          }
        },
        "relatedDataProducts": {
          "type": "array",
          "description": "List of data product's that the dataset is related to",
          "items": {
            "$ref": "#/definitions/prototypeRelatedDataProduct"
          }
        },
        "scienceTeams": {
          "type": "array",
          "description": "List of responsible science teams for the dataset",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "prototypeDatasetDataDetail": {
      "type": "object",
      "description": "The dataset's data files",
      "properties": {
        "url": {
          "type": "string",
          "description": "The data URL for accessing the data files for the dataset"
        },
        "files": {
          "type": "array",
          "description": "List of data files for the dataset",
          "items": {
            "$ref": "#/definitions/prototypeDataFile"
          }
        },
        "dataLocations": {
          "type": "array",
          "description": "List of data locations for the dataset",
          "items": {
            "$ref": "#/definitions/prototypeDataLocation"
          }
        }
      }
    },
    "prototypeDatasetData": {
      "type": "object",
      "description": "Type definition for prototype dataset data",
      "properties": {
        "datasetUuid": {
          "type": "string",
          "description": "The dataset UUID"
        },
        "datasetProjectTitle": {
          "type": "string",
          "description": "The title of the project"
        },
        "files": {
          "type": "array",
          "description": "List of data files for the dataset",
          "items": {
            "$ref": "#/definitions/prototypeDataFile"
          }
        },
        "dataLocations": {
          "type": "array",
          "description": "List of data locations for the dataset",
          "items": {
            "$ref": "#/definitions/prototypeDataLocation"
          }
        }
      }
    },
    "prototypeDataFile": {
      "type": "object",
      "description": "Type definition for prototype dataset data file",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data file"
        },
        "description": {
          "type": "string",
          "description": "A description of the data file"
        },
        "fileSize": {
          "type": "string",
          "description": "File size in bytes"
        },
        "fileName": {
          "type": "string",
          "description": "The filename of the file"
        },
        "md5": {
          "type": "string",
          "description": "MD5 checksum value in hex"
        },
        "url": {
          "type": "string",
          "description": "Download URL for the file"
        },
        "type": {
          "type": "object",
          "description": "The type of the data file (metadata, data, etc)",
          "$ref": "#/definitions/prototypeDataFileType"
        }
      }
    },
    "prototypeDataFileType": {
      "type": "object",
      "description": "Type definition for prototype dataset data file type",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the data file type"
        },
        "description": {
          "type": "string",
          "description": "The description of the data file type"
        }
      }
    },
    "prototypeDataLocation": {
      "type": "object",
      "description": "Type definition for a prototype dataset data location",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path or URL to the data location"
        },
        "description": {
          "type": "string",
          "description": "A description of the data location referenced by the path"
        },
        "metadata": {
          "type": "boolean",
          "description": "Indicates that this data location refers to metadata exclusively"
        }
      }
    },
    "prototypeDatasetDoi": {
      "type": "object",
      "description": "Type definition for a Prototype Dataset DOI",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL of the DOI"
        },
        "generationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The generation date of the DOI"
        }
      }
    },
    "prototypeDatasetRelatedVersion": {
      "type": "object",
      "description": "Type definition for a Prototype Dataset related version",
      "properties": {
        "datasetUuid": {
          "type": "string",
          "description": "The related dataset UUID"
        },
        "datasetProjectTitle": {
          "type": "string",
          "description": "The related dataset project title"
        },
        "datasetVersion": {
          "type": "string",
          "description": "The related dataset version"
        }
      }
    },
    "prototypeFileType": {
      "type": "object",
      "description": "Type definition for a prototype dataset file type",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the file type (CSV, PDF, HDF5, etc)"
        },
        "description": {
          "type": "string",
          "description": "A description of the file type"
        }
      }
    },
    "prototypeLocation": {
      "type": "object",
      "description": "Type definition for a prototype dataset location",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Three character domain abbreviation (D01, D02, etc) for the domain this site is in"
        },
        "state": {
          "type": "string",
          "description": "Two letter state code that this site is in"
        },
        "siteCode": {
          "type": "string",
          "description": "Four character code for the site"
        },
        "siteName": {
          "type": "string",
          "description": "Full name for the site"
        },
        "latitude": {
          "type": "string",
          "description": "Decimal latitude for the location"
        },
        "longitude": {
          "type": "string",
          "description": "Decimal longitude for the location"
        }
      }
    },
    "prototypePublicationCitation": {
      "type": "object",
      "description": "Type definition for a prototype dataset publication citation",
      "properties": {
        "citation": {
          "type": "string",
          "description": "The citation associated with a publication involving the dataset"
        },
        "citationIdentifier": {
          "type": "string",
          "description": "The citation identifier (DOI, arXiv, URL) associated with a publication involving the dataset"
        },
        "citationIdentifierType": {
          "type": "string",
          "description": "The citation identifier type associated with a publication involving the dataset (DOI, arXiv, URL)"
        }
      }
    },
    "prototypeRelatedDataProduct": {
      "type": "object",
      "description": "Type definition for a prototype dataset related data product",
      "properties": {
        "dataProductIdq": {
          "type": "string",
          "description": "Revisioned, long code for the data product (NEON.DOM.SITE.DP1.00001.001, etc.)"
        },
        "dataProductCode": {
          "type": "string",
          "description": "Revisioned, shortened code for the data product (DP1.00001.001, DP1.10072.001, etc.)"
        },
        "dataProductName": {
          "type": "string",
          "description": "The name of the data product"
        },
        "dataProductDescription": {
          "type": "string",
          "description": "A brief description of the data product"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "status": {
          "type": "number",
          "format": "int"
        }
      }
    }
  }
}
